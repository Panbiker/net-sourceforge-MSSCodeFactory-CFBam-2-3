--
--	@(#) dbcreate/cfbam/mssql/crsp_movedown_idxcol.tsql
--
--	CFBam
--
--	Copyright (c) 2014-2015 Mark Sobkow
--	
--	This program is available as free software under the GNU GPL v3, under
--	the Eclipse Public License 1.0, or under a commercial license from Mark
--	Sobkow.  For commercial licensing details, please contact msobkow@sasktel.net.
--	
--	You should have received copies of the complete license text for
--	GPLv3.txt and EPLv1_0.txt, containing the text
--	of the GNU General Public License v 3.0 and the Eclipse Public License v 1.0.
--	
--	Under the terms of the GPL:
--	
--		This program is free software: you can redistribute it and/or modify
--		it under the terms of the GNU General Public License as published by
--		the Free Software Foundation, either version 3 of the License, or
--		(at your option) any later version.
--	  
--		This program is distributed in the hope that it will be useful,
--		but WITHOUT ANY WARRANTY; without even the implied warranty of
--		MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--		GNU General Public License for more details.
--	  
--		You should have received a copy of the GNU General Public License
--		along with this program.  If not, see <http://www.gnu.org/licenses/>.
--	
--	This software incorporates code originally Copyright (c) Mark Sobkow 2014-2015
--	and licensed under the BSD 3-Clause license as written by xfree86.org:
--	
--	Redistribution and use in source and binary forms, with or without
--	modification, are permitted provided that the following conditions are
--	met:
--	
--	    (1) Redistributions of source code must retain the above copyright
--	    notice, this list of conditions and the following disclaimer. 
--	
--	    (2) Redistributions in binary form must reproduce the above copyright
--	    notice, this list of conditions and the following disclaimer in
--	    the documentation and/or other materials provided with the
--	    distribution.  
--	    
--	    (3)The name of the author may not be used to
--	    endorse or promote products derived from this software without
--	    specific prior written permission.
--	
--	THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
--	IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
--	WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
--	DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
--	INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
--	(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
--	SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
--	HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
--	STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
--	IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
--	POSSIBILITY OF SUCH DAMAGE.
--	
--
-- **********************************************************************
--
--	Code manufactured by MSS Code Factory
--

use cfbam23
go

create proc sp_movedown_idxcol
	@argAuditClusterId bigint,
	@argAuditUserId varchar(36),
	@argAuditSessionId varchar(36),
	@secClusterId bigint,
	@secTenantId bigint,
	@argTenantId decimal(21,0),
	@argId decimal(21,0),
	@argRevision int
as
	declare @varTenantId decimal(21,0)
	declare @varIndexId decimal(21,0)
	declare @varprevTenantId decimal(21,0)
	declare @varprevId decimal(21,0)
	declare @varnextTenantId decimal(21,0)
	declare @varnextId decimal(21,0)
	declare @gnextTenantId decimal(21,0)
	declare @gnextId decimal(21,0)
	declare @oldRevision int
	declare @oldTenantId decimal(21,0)
	declare @permissionFlag int
begin
	select
		@varTenantId = tenantid,
		@varIndexId = indexid
	from cfbam23..idxcol
	where
		tenantid = @argTenantId
		and id = @argId

	update cfbam23..scopedef
	set revision = revision + 1
	where
		tenantid = @varTenantId
		and id = @varIndexId

	update cfbam23..idxcol
	set forcesynclock = forcesynclock + 1
	where
			tenantid = @argTenantId
		and id = @argId
	if @@rowcount != 1
	begin
		raiserror( 'Data collision detected -- primary key does not exist',
			15,
			1 )
	end

	if @argRevision != @oldRevision
	begin
		raiserror( 'sp_movedown_idxcol() Data collision detected', 15, 1 )
	end

	if( @oldTenantId != @secTenantId )
	begin
		exec sp_is_system_user @permissionFlag output, @argAuditUserId
		if( @permissionFlag = 0 )
		begin
			raiserror( 'Permission denied -- Data is not owned by logged in tenant', 15, 1 )
		end
	end

	exec sp_is_tenant_user @permissionFlag output, @oldTenantId, 'UpdateIndexCol', @argAuditUserId
	if( @permissionFlag = 0 )
	begin
		raiserror( 'Permission denied -- User not found in tenant TSecGroup for UpdateIndexCol', 15, 1 )
	end

	select
		@varprevTenantId = idxc.prevtenantid,
		@varprevId = idxc.previd,
		@varnextTenantId = idxc.nexttenantid,
		@varnextId = idxc.nextid,
		@gnextTenantId = nxtidxc.nexttenantid,
		@gnextId = nxtidxc.nextid
	from cfbam23..idxcol idxc
		left outer join cfbam23..idxcol prvidxc on
			prvidxc.tenantid = idxc.prevtenantid
			and prvidxc.id = idxc.previd
		left outer join cfbam23..idxcol nxtidxc on
			nxtidxc.tenantid = idxc.nexttenantid
			and nxtidxc.id = idxc.nextid
	where
		idxc.tenantid = @argTenantId
		and idxc.id = @argId

	if( @varnextTenantId is not null )
	begin
		if( @varprevTenantId is not null )
		begin
			update cfbam23..idxcol
			set
				revision = revision + 1,
				updatedby = @argAuditUserId,
				updatedat = sysdatetime(),
				nexttenantid = @varnextTenantId,
				nextid = @varnextId
			where
				tenantid = @varprevTenantId
				and id = @varprevId

			if @@rowcount != 1
			begin
				raiserror( 'sp_movedown_idxcol() Expected to affect one previous row', 15, 1 )
			end

			exec sp_audit_idxcol @argAuditClusterId,
				@argAuditUserId,
				@argAuditSessionId,
				@secClusterId,
				@secTenantId,
				@varprevTenantId,
				@varprevId,
				2
		end

		update cfbam23..idxcol
		set
			revision = revision + 1,
			updatedby = @argAuditUserId,
			updatedat = sysdatetime(),
			prevtenantid = @varprevTenantId,
			previd = @varprevId,
			nexttenantid = @argTenantId,
			nextid = @argId
		where
			tenantid = @varnextTenantId
			and id = @varnextId

		if @@rowcount != 1
		begin
			raiserror( 'sp_movedown_idxcol() Expected to affect one next row', 15, 1 )
		end

		exec sp_audit_idxcol @argAuditClusterId,
			@argAuditUserId,
			@argAuditSessionId,
			@secClusterId,
			@secTenantId,
			@varnextTenantId,
			@varnextId,
			2

		update cfbam23..idxcol
		set
			revision = revision + 1,
			updatedby = @argAuditUserId,
			updatedat = sysdatetime(),
			prevtenantid = @varnextTenantId,
			previd = @varnextId,
			nexttenantid = @gnextTenantId,
			nextid = @gnextId
		where
			tenantid = @argTenantId
			and id = @argId

		if @@rowcount != 1
		begin
			raiserror( 'sp_movedown_idxcol() Expected to affect one obj row', 15, 1 )
		end

		exec sp_audit_idxcol @argAuditClusterId,
			@argAuditUserId,
			@argAuditSessionId,
			@secClusterId,
			@secTenantId,
			@argTenantId,
			@argId,
			2

		if( @gnextTenantId is not null )
		begin
			update cfbam23..idxcol
			set
				revision = revision + 1,
				updatedby = @argAuditUserId,
				updatedat = sysdatetime(),
				prevtenantid = @argTenantId,
				previd = @argId
			where
				tenantid = @gnextTenantId
				and id = @gnextId

			if @@rowcount != 1
			begin
				raiserror( 'sp_movedown_idxcol() Expected to affect one grandnext row', 15, 1 )
			end

			exec sp_audit_idxcol @argAuditClusterId,
				@argAuditUserId,
				@argAuditSessionId,
				@secClusterId,
				@secTenantId,
				@gnextTenantId,
				@gnextId,
				2
		end

	end

	update cfbam23..scopedef
	set revision = revision - 1
	where
		tenantid = @varTenantId
		and id = @varIndexId

	select
			idxc.createdby,
			convert( varchar, idxc.createdat, 120 ) as createdat,
			idxc.updatedby,
			convert( varchar, idxc.updatedat, 120 ) as updatedat,
			idxc.tenantid as tenantid,
			idxc.indexid as indexid,
			idxc.id as id,
			idxc.defschtentid as defschtentid,
			idxc.defschid as defschid,
			idxc.name as name,
			idxc.short_name as short_name,
			idxc.label as label,
			idxc.short_descr as short_descr,
			idxc.descr as descr,
			idxc.columnid as columnid,
			idxc.isascending as isascending,
			idxc.prevtenantid as prevtenantid,
			idxc.previd as previd,
			idxc.nexttenantid as nexttenantid,
			idxc.nextid as nextid,
			idxc.dflt_vis as dflt_vis,
		idxc.revision as revision
	from cfbam23..idxcol as idxc
	where
		idxc.tenantid = @argTenantId
			and idxc.id = @argId
end
go

quit
