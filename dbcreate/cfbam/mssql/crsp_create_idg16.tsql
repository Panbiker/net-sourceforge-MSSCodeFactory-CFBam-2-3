--
--	@(#) dbcreate/cfbam/mssql/crsp_create_idg16.tsql
--
--	CFBam
--
--	Copyright (c) 2014-2015 Mark Sobkow
--	
--	This program is available as free software under the GNU GPL v3, under
--	the Eclipse Public License 1.0, or under a commercial license from Mark
--	Sobkow.  For commercial licensing details, please contact msobkow@sasktel.net.
--	
--	You should have received copies of the complete license text for
--	GPLv3.txt and EPLv1_0.txt, containing the text
--	of the GNU General Public License v 3.0 and the Eclipse Public License v 1.0.
--	
--	Under the terms of the GPL:
--	
--		This program is free software: you can redistribute it and/or modify
--		it under the terms of the GNU General Public License as published by
--		the Free Software Foundation, either version 3 of the License, or
--		(at your option) any later version.
--	  
--		This program is distributed in the hope that it will be useful,
--		but WITHOUT ANY WARRANTY; without even the implied warranty of
--		MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--		GNU General Public License for more details.
--	  
--		You should have received a copy of the GNU General Public License
--		along with this program.  If not, see <http://www.gnu.org/licenses/>.
--	
--	This software incorporates code originally Copyright (c) Mark Sobkow 2014-2015
--	and licensed under the BSD 3-Clause license as written by xfree86.org:
--	
--	Redistribution and use in source and binary forms, with or without
--	modification, are permitted provided that the following conditions are
--	met:
--	
--	    (1) Redistributions of source code must retain the above copyright
--	    notice, this list of conditions and the following disclaimer. 
--	
--	    (2) Redistributions in binary form must reproduce the above copyright
--	    notice, this list of conditions and the following disclaimer in
--	    the documentation and/or other materials provided with the
--	    distribution.  
--	    
--	    (3)The name of the author may not be used to
--	    endorse or promote products derived from this software without
--	    specific prior written permission.
--	
--	THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
--	IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
--	WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
--	DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
--	INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
--	(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
--	SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
--	HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
--	STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
--	IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
--	POSSIBILITY OF SUCH DAMAGE.
--	
--
-- **********************************************************************
--
--	Code manufactured by MSS Code Factory
--

use cfbam23
go

create proc sp_create_idg16
	@argAuditClusterId bigint,
	@argAuditUserId varchar(36),
	@argAuditSessionId varchar(36),
	@secClusterId bigint,
	@secTenantId bigint,
	@argClassCode CFBam23ClassCode,
	@argTenantId decimal(21,0),
	@argScopeId decimal(21,0),
	@argDefSchemaTenantId decimal(21,0),
	@argDefSchemaId decimal(21,0),
	@argName varchar(192),
	@argShortName varchar(16),
	@argLabel varchar(64),
	@argShortDescription varchar(128),
	@argDescription varchar(1023),
	@argIsNullable char(1),
	@argGenerateId char(1),
	@argDataScopeId smallint,
	@argViewAccessSecurityId smallint,
	@argEditAccessSecurityId smallint,
	@argViewAccessFrequencyId smallint,
	@argEditAccessFrequencyId smallint,
	@argPrevTenantId decimal(21,0),
	@argPrevId decimal(21,0),
	@argNextTenantId decimal(21,0),
	@argNextId decimal(21,0),
	@argDefaultVisibility char(1),
	@argDbName varchar(32),
	@argInitValue smallint,
	@argDefaultValue smallint,
	@argMinValue smallint,
	@argMaxValue smallint,
	@argNullValue smallint,
	@argUnknownValue smallint,
	@argSchemaDefId decimal(21,0),
	@argDispenserTenantId decimal(21,0),
	@argDispenserId decimal(21,0),
	@argSlice smallint,
	@argBlockSize smallint
as
	declare @rc int
	declare @permissionFlag int
	declare @argId decimal(21,0)
	declare @prevClassCode varchar(4)
	declare @prevPrevTenantId decimal(21,0)
	declare @prevPrevId decimal(21,0)
begin
	if( @argClassCode = 'IG16' )
	begin
		exec sp_is_tenant_user @permissionFlag output, @argTenantId, 'CreateId16Gen', @argAuditUserId
		if( @permissionFlag = 0 )
		begin
			raiserror( 'Permission denied -- User not found in tenant TSecGroup for CreateId16Gen',
				15,
				1 )
		end
	end

	update cfbam23..scopedef
	set revision = revision + 1
	where
		tenantid = @argTenantId
		and id = @argSchemaDefId

	set @prevPrevTenantId = null
	set @prevPrevId = null
	set @prevClassCode = null

	select
		@prevPrevTenantId = valu.tenantid,
		@prevPrevId = valu.id,
		@prevClassCode = valu.classcode
	from cfbam23..valdef valu
	where
		valu.tenantid = @argTenantId
		and valu.scopeid = @argScopeId
		and valu.nexttenantid is null
		and valu.nextid is null

	exec sp_next_tenant_valueidgen @argId output,
		@argTenantId

	insert into cfbam23..valdef(
			forcesynclock,
			classcode,
			createdby,
			createdat,
			updatedby,
			updatedat,
			tenantid,
			scopeid,
			id,
			defschtentid,
			defschid,
			name,
			short_name,
			label,
			short_descr,
			descr,
			isnullable,
			generateid,
			datascopeid,
			vasecid,
			easecid,
			vafid,
			eafid,
			prevtenantid,
			previd,
			nexttenantid,
			nextid,
			dflt_vis,
			revision )
	values (
			0,
			@argClassCode,
			@argAuditUserId,
			sysdatetime(),
			@argAuditUserId,
			sysdatetime(),
			@argTenantId,
			@argScopeId,
			@argId,
			@argDefSchemaTenantId,
			@argDefSchemaId,
			@argName,
			@argShortName,
			@argLabel,
			@argShortDescription,
			@argDescription,
			@argIsNullable,
			@argGenerateId,
			@argDataScopeId,
			@argViewAccessSecurityId,
			@argEditAccessSecurityId,
			@argViewAccessFrequencyId,
			@argEditAccessFrequencyId,
			@prevPrevTenantId,
			@prevPrevId,
			null,
			null,
			@argDefaultVisibility,
			1 )

	insert into cfbam23..atomdef(
			tenantid,
			id,
			dbname )
	values (
			@argTenantId,
			@argId,
			@argDbName )

	insert into cfbam23..int16def(
			tenantid,
			id,
			initval,
			defval,
			minval,
			maxval,
			nullvalue,
			unknownval )
	values (
			@argTenantId,
			@argId,
			@argInitValue,
			@argDefaultValue,
			@argMinValue,
			@argMaxValue,
			@argNullValue,
			@argUnknownValue )

	insert into cfbam23..int16typ(
			tenantid,
			id,
			schemadefid )
	values (
			@argTenantId,
			@argId,
			@argSchemaDefId )

	insert into cfbam23..idg16(
			tenantid,
			id,
			dispensertenantid,
			dispenserid,
			slice,
			blocksize )
	values (
			@argTenantId,
			@argId,
			@argDispenserTenantId,
			@argDispenserId,
			@argSlice,
			@argBlockSize )

	if( @argClassCode = 'IG16' )
	begin
		insert into cfbam23..idg16_h (
			tenantid,
			id,
			classcode,
			auditclusterid,
			auditsessionid,
			auditstamp,
			scopeid,
			defschtentid,
			defschid,
			name,
			short_name,
			label,
			short_descr,
			descr,
			isnullable,
			generateid,
			datascopeid,
			vasecid,
			easecid,
			vafid,
			eafid,
			prevtenantid,
			previd,
			nexttenantid,
			nextid,
			dflt_vis,
			dbname,
			initval,
			defval,
			minval,
			maxval,
			nullvalue,
			unknownval,
			schemadefid,
			dispensertenantid,
			dispenserid,
			slice,
			blocksize,
			revision,
			auditaction )
		select
			valu.tenantid,
			valu.id,
			valu.classcode,
			@argAuditClusterId,
			@argAuditSessionId,
			sysdatetime(),
			valu.scopeid,
			valu.defschtentid,
			valu.defschid,
			valu.name,
			valu.short_name,
			valu.label,
			valu.short_descr,
			valu.descr,
			valu.isnullable,
			valu.generateid,
			valu.datascopeid,
			valu.vasecid,
			valu.easecid,
			valu.vafid,
			valu.eafid,
			valu.prevtenantid,
			valu.previd,
			valu.nexttenantid,
			valu.nextid,
			valu.dflt_vis,
			atom.dbname,
			i16d.initval,
			i16d.defval,
			i16d.minval,
			i16d.maxval,
			i16d.nullvalue,
			i16d.unknownval,
			i16t.schemadefid,
			ig16.dispensertenantid,
			ig16.dispenserid,
			ig16.slice,
			ig16.blocksize,
			valu.revision,
			1
		from cfbam23..idg16 as ig16
			inner join cfbam23..int16typ i16t on
				ig16.tenantid = i16t.tenantid
				and ig16.id = i16t.id
			inner join cfbam23..int16def i16d on
				i16t.tenantid = i16d.tenantid
				and i16t.id = i16d.id
			inner join cfbam23..atomdef atom on
				i16d.tenantid = atom.tenantid
				and i16d.id = atom.id
			inner join cfbam23..valdef valu on
				atom.tenantid = valu.tenantid
				and atom.id = valu.id
		where
			ig16.tenantid = @argTenantId
			and ig16.id = @argId
	end

	if( @prevPrevTenantId is not null )
	begin
		update cfbam23..valdef
		set
			revision = revision + 1,
			updatedby = @argAuditUserId,
			updatedat = sysdatetime(),
			nexttenantid = @argTenantId,
			nextid = @argId
		where
			tenantid = @prevPrevTenantId
			and id = @prevPrevId

		exec sp_audit_valdef @argAuditClusterId,
			@argAuditUserId,
			@argAuditSessionId,
			@secClusterId,
			@secTenantId,
			@prevClassCode,
			@prevPrevTenantId,
			@prevPrevId,
			2
	end

	update cfbam23..scopedef
	set revision = revision - 1
	where
		tenantid = @argTenantId
		and id = @argSchemaDefId

	select
			valu.classcode,
			valu.createdby,
			convert( varchar, valu.createdat, 120 ) as createdat,
			valu.updatedby,
			convert( varchar, valu.updatedat, 120 ) as updatedat,
			valu.tenantid as tenantid,
			valu.scopeid as scopeid,
			valu.id as id,
			valu.defschtentid as defschtentid,
			valu.defschid as defschid,
			valu.name as name,
			valu.short_name as short_name,
			valu.label as label,
			valu.short_descr as short_descr,
			valu.descr as descr,
			valu.isnullable as isnullable,
			valu.generateid as generateid,
			valu.datascopeid as datascopeid,
			valu.vasecid as vasecid,
			valu.easecid as easecid,
			valu.vafid as vafid,
			valu.eafid as eafid,
			valu.prevtenantid as prevtenantid,
			valu.previd as previd,
			valu.nexttenantid as nexttenantid,
			valu.nextid as nextid,
			valu.dflt_vis as dflt_vis,
			atom.dbname as dbname,
			i16d.initval as initval,
			i16d.defval as defval,
			i16d.minval as minval,
			i16d.maxval as maxval,
			i16d.nullvalue as nullvalue,
			i16d.unknownval as unknownval,
			i16t.schemadefid as schemadefid,
			ig16.dispensertenantid as dispensertenantid,
			ig16.dispenserid as dispenserid,
			ig16.slice as slice,
			ig16.blocksize as blocksize,
			valu.revision as revision
	from cfbam23..idg16 as ig16
			inner join cfbam23..int16typ i16t on
				ig16.tenantid = i16t.tenantid
				and ig16.id = i16t.id
			inner join cfbam23..int16def i16d on
				i16t.tenantid = i16d.tenantid
				and i16t.id = i16d.id
			inner join cfbam23..atomdef atom on
				i16d.tenantid = atom.tenantid
				and i16d.id = atom.id
			inner join cfbam23..valdef valu on
				atom.tenantid = valu.tenantid
				and atom.id = valu.id
	where
			ig16.tenantid = @argTenantId
			and ig16.id = @argId
end
go

quit
