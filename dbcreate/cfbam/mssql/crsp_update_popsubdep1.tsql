--
--	@(#) dbcreate/cfbam/mssql/crsp_update_popsubdep1.tsql
--
--	CFBam
--
--	Copyright (c) 2014-2015 Mark Sobkow
--	
--	This program is available as free software under the GNU GPL v3, under
--	the Eclipse Public License 1.0, or under a commercial license from Mark
--	Sobkow.  For commercial licensing details, please contact msobkow@sasktel.net.
--	
--	You should have received copies of the complete license text for
--	GPLv3.txt and EPLv1_0.txt, containing the text
--	of the GNU General Public License v 3.0 and the Eclipse Public License v 1.0.
--	
--	Under the terms of the GPL:
--	
--		This program is free software: you can redistribute it and/or modify
--		it under the terms of the GNU General Public License as published by
--		the Free Software Foundation, either version 3 of the License, or
--		(at your option) any later version.
--	  
--		This program is distributed in the hope that it will be useful,
--		but WITHOUT ANY WARRANTY; without even the implied warranty of
--		MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--		GNU General Public License for more details.
--	  
--		You should have received a copy of the GNU General Public License
--		along with this program.  If not, see <http://www.gnu.org/licenses/>.
--	
--	This software incorporates code originally Copyright (c) Mark Sobkow 2014-2015
--	and licensed under the BSD 3-Clause license as written by xfree86.org:
--	
--	Redistribution and use in source and binary forms, with or without
--	modification, are permitted provided that the following conditions are
--	met:
--	
--	    (1) Redistributions of source code must retain the above copyright
--	    notice, this list of conditions and the following disclaimer. 
--	
--	    (2) Redistributions in binary form must reproduce the above copyright
--	    notice, this list of conditions and the following disclaimer in
--	    the documentation and/or other materials provided with the
--	    distribution.  
--	    
--	    (3)The name of the author may not be used to
--	    endorse or promote products derived from this software without
--	    specific prior written permission.
--	
--	THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
--	IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
--	WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
--	DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
--	INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
--	(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
--	SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
--	HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
--	STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
--	IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
--	POSSIBILITY OF SUCH DAMAGE.
--	
--
-- **********************************************************************
--
--	Code manufactured by MSS Code Factory
--


use cfbam23
go

create proc sp_update_popsubdep1
	@argAuditClusterId bigint,
	@argAuditUserId varchar(36),
	@argAuditSessionId varchar(36),
	@secClusterId bigint,
	@secTenantId bigint,
	@argClassCode CFBam23ClassCode,
	@argTenantId decimal(21,0),
	@argId decimal(21,0),
	@argDefSchemaTenantId decimal(21,0),
	@argDefSchemaId decimal(21,0),
	@argRelationTenantId decimal(21,0),
	@argRelationId decimal(21,0),
	@argContTenantId decimal(21,0),
	@argContPopTopDepId decimal(21,0),
	@argName varchar(192),
	@argRevision integer
as
	declare @oldRevision int
	declare @oldClassCode CFBam23ClassCode
	declare @oldTenantId decimal(21,0)
	declare @oldAuditCreatedAt datetime2
	declare @oldAuditCreatedBy varchar(36)
	declare @oldAuditUpdatedAt datetime2
	declare @oldAuditUpdatedBy varchar(36)
	declare @permissionFlag int
begin

	if( @argClassCode = 'POP1' )
	begin
		exec sp_is_tenant_user @permissionFlag output, @argTenantId, 'UpdatePopSubDep1', @argAuditUserId
		if( @permissionFlag = 0 )
		begin
			raiserror( 'Permission denied -- User not found in tenant TSecGroup for UpdatePopSubDep1',
				15,
				1 )
		end
	end

	update cfbam23..scopedef
	set forcesynclock = forcesynclock + 1
	where
			tenantid = @argTenantId
		and id = @argId
	if @@rowcount != 1
	begin
		raiserror( 'Data collision detected -- primary key does not exist',
			15,
			1 )
	end

	select
		@oldClassCode = scop.classcode,
		@oldTenantId = scop.tenantid,
		@oldRevision = scop.revision
	from cfbam23..popsubdep1 as pop1
			inner join cfbam23..pop_dep popd on
				pop1.tenantid = popd.tenantid
				and pop1.id = popd.id
			inner join cfbam23..scopedef scop on
				popd.tenantid = scop.tenantid
				and popd.id = scop.id
	where
			scop.tenantid = @argTenantId
			and scop.id = @argId

	if @argRevision != @oldRevision
	begin
		raiserror( 'sp_update_popsubdep1() Data collision detected',
			15,
			1 )
	end


	if( @argClassCode = 'POP1' )
	begin
		if( @argTenantId != @oldTenantId )
		begin
			raiserror( 'Permission denied -- TenantId cannot be updated for PopSubDep1',
				15,
				1 )
		end
	end

	update cfbam23..scopedef
	set
		revision = @argRevision + 1
	where
		tenantid = @argTenantId
		and id = @argId
		and revision = @argRevision

	if @@rowcount != 1
	begin
		raiserror( 'sp_update_popsubdep1() Data collision detected',
			15,
			1 )
	end

	update cfbam23..pop_dep
	set
		defschtentid = @argDefSchemaTenantId,
		defschid = @argDefSchemaId,
		relationtenantid = @argRelationTenantId,
		relationid = @argRelationId
	where
		tenantid = @argTenantId
		and id = @argId

	if @@rowcount != 1
	begin
		raiserror( 'sp_update_popsubdep1() Data collision detected',
			15,
			1 )
	end

	update cfbam23..popsubdep1
	set
		conttenantid = @argContTenantId,
		contpopdepid = @argContPopTopDepId,
		name = @argName
	where
		tenantid = @argTenantId
		and id = @argId

	if @@rowcount != 1
	begin
		raiserror( 'sp_update_popsubdep1() Data collision detected',
			15,
			1 )
	end

	if( @oldClassCode = 'POP1' )
	begin
		insert into cfbam23..popsubdep1_h (
			tenantid,
			id,
			classcode,
			auditclusterid,
			auditsessionid,
			auditstamp,
			defschtentid,
			defschid,
			relationtenantid,
			relationid,
			conttenantid,
			contpopdepid,
			name,
			revision,
			auditaction )
		select
			scop.tenantid,
			scop.id,
			scop.classcode,
			@argAuditClusterId,
			@argAuditSessionId,
			sysdatetime(),
			popd.defschtentid,
			popd.defschid,
			popd.relationtenantid,
			popd.relationid,
			pop1.conttenantid,
			pop1.contpopdepid,
			pop1.name,
			scop.revision,
			2
		from cfbam23..popsubdep1 as pop1
			inner join cfbam23..pop_dep popd on
				pop1.tenantid = popd.tenantid
				and pop1.id = popd.id
			inner join cfbam23..scopedef scop on
				popd.tenantid = scop.tenantid
				and popd.id = scop.id
		where
			pop1.tenantid = @argTenantId
			and pop1.id = @argId
	end

	select
			scop.classcode,
			scop.createdby,
			convert( varchar, scop.createdat, 120 ) as createdat,
			scop.updatedby,
			convert( varchar, scop.updatedat, 120 ) as updatedat,
			scop.tenantid as tenantid,
			scop.id as id,
			popd.defschtentid as defschtentid,
			popd.defschid as defschid,
			popd.relationtenantid as relationtenantid,
			popd.relationid as relationid,
			pop1.conttenantid as conttenantid,
			pop1.contpopdepid as contpopdepid,
			pop1.name as name,
		scop.revision as revision
	from cfbam23..popsubdep1 as pop1
			inner join cfbam23..pop_dep popd on
				pop1.tenantid = popd.tenantid
				and pop1.id = popd.id
			inner join cfbam23..scopedef scop on
				popd.tenantid = scop.tenantid
				and popd.id = scop.id
	where
		pop1.tenantid = @argTenantId
			and pop1.id = @argId
end
go


quit
