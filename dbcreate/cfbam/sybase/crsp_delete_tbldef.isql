--
--	@(#) dbcreate/cfbam/sybase/crsp_delete_tbldef.isql
--
--	CFBam
--
--	Copyright (c) 2014-2015 Mark Sobkow
--	
--	This program is available as free software under the GNU GPL v3, under
--	the Eclipse Public License 1.0, or under a commercial license from Mark
--	Sobkow.  For commercial licensing details, please contact msobkow@sasktel.net.
--	
--	You should have received copies of the complete license text for
--	GPLv3.txt and EPLv1_0.txt, containing the text
--	of the GNU General Public License v 3.0 and the Eclipse Public License v 1.0.
--	
--	Under the terms of the GPL:
--	
--		This program is free software: you can redistribute it and/or modify
--		it under the terms of the GNU General Public License as published by
--		the Free Software Foundation, either version 3 of the License, or
--		(at your option) any later version.
--	  
--		This program is distributed in the hope that it will be useful,
--		but WITHOUT ANY WARRANTY; without even the implied warranty of
--		MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--		GNU General Public License for more details.
--	  
--		You should have received a copy of the GNU General Public License
--		along with this program.  If not, see <http://www.gnu.org/licenses/>.
--	
--	This software incorporates code originally Copyright (c) Mark Sobkow 2014-2015
--	and licensed under the BSD 3-Clause license as written by xfree86.org:
--	
--	Redistribution and use in source and binary forms, with or without
--	modification, are permitted provided that the following conditions are
--	met:
--	
--	    (1) Redistributions of source code must retain the above copyright
--	    notice, this list of conditions and the following disclaimer. 
--	
--	    (2) Redistributions in binary form must reproduce the above copyright
--	    notice, this list of conditions and the following disclaimer in
--	    the documentation and/or other materials provided with the
--	    distribution.  
--	    
--	    (3)The name of the author may not be used to
--	    endorse or promote products derived from this software without
--	    specific prior written permission.
--	
--	THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
--	IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
--	WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
--	DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
--	INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
--	(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
--	SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
--	HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
--	STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
--	IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
--	POSSIBILITY OF SUCH DAMAGE.
--	
--
-- **********************************************************************
--
--	Code manufactured by MSS Code Factory
--

if exists ( select * from sysobjects where name = 'sp_delete_tbldef' )
begin
	drop proc sp_delete_tbldef
end
go

create proc sp_delete_tbldef
	@argAuditClusterId bigint,
	@argAuditUserId varchar(36),
	@argAuditSessionId varchar(36),
	@secClusterId bigint,
	@secTenantId bigint,
	@argTenantId bigint,
	@argId bigint,
	@argRevision int
as	declare @oldRevision int
	declare @rc int
	declare @oldClassCode MssCFClassCode
	declare @oldTenantId bigint
	declare @oldId bigint
	declare @oldSchemaDefId bigint
	declare @oldDefSchemaTenantId bigint
	declare @oldDefSchemaId bigint
	declare @oldName varchar(192)
	declare @oldDbName varchar(32)
	declare @oldShortName varchar(16)
	declare @oldLabel varchar(64)
	declare @oldShortDescription varchar(50)
	declare @oldDescription varchar(100)
	declare @oldPrimaryIndexTenantId bigint
	declare @oldPrimaryIndexId bigint
	declare @oldTableClassCode varchar(4)
	declare @oldLookupIndexTenantId bigint
	declare @oldLookupIndexId bigint
	declare @oldAltIndexTenantId bigint
	declare @oldAltIndexId bigint
	declare @oldQualifyingTenantId bigint
	declare @oldQualifyingTableId bigint
	declare @oldPolyBase char(1)
	declare @oldIsInstantiable char(1)
	declare @oldHasHistory char(1)
	declare @oldHasAuditColumns char(1)
	declare @oldLoaderBehaviourId smallint
	declare @oldDataScopeId smallint
	declare @oldSecurityScopeId smallint
	declare @oldViewAccessSecurityId smallint
	declare @oldEditAccessSecurityId smallint
	declare @oldViewAccessFrequencyId smallint
	declare @oldEditAccessFrequencyId smallint
	declare @oldJObjMembers text
	declare @oldJObjInterface text
	declare @oldJObjImport text
	declare @oldJObjImplementation text
	declare @oldJEditObjMembers text
	declare @oldJEditObjInterface text
	declare @oldJEditObjImport text
	declare @oldJEditObjImplementation text
	declare @oldJTableImport text
	declare @oldJTableMembers text
	declare @oldJTableInterface text
	declare @oldJTableImplementation text
	declare @oldJTableObjImport text
	declare @oldJTableObjMembers text
	declare @oldJTableObjInterface text
	declare @oldJTableObjImplementation text
	declare @oldJDb2LUWTableImport text
	declare @oldJDb2LUWTableMembers text
	declare @oldJDb2LUWTableImplementation text
	declare @oldJMSSqlTableImport text
	declare @oldJMSSqlTableMembers text
	declare @oldJMSSqlTableImplementation text
	declare @oldJMySqlTableImport text
	declare @oldJMySqlTableMembers text
	declare @oldJMySqlTableImplementation text
	declare @oldJOracleTableImport text
	declare @oldJOracleTableMembers text
	declare @oldJOracleTableImplementation text
	declare @oldJPgSqlTableImport text
	declare @oldJPgSqlTableMembers text
	declare @oldJPgSqlTableImplementation text
	declare @oldJSybaseTableImport text
	declare @oldJSybaseTableMembers text
	declare @oldJSybaseTableImplementation text
	declare @oldJRamTableImport text
	declare @oldJRamTableMembers text
	declare @oldJRamTableImplementation text
	declare @oldJSaxLoaderImport text
	declare @oldJSaxLoaderStartElement text
	declare @oldJSaxLoaderEndElement text
	declare @oldJXMsgTableImport text
	declare @oldJXMsgTableFormatters text
	declare @oldJXMsgRqstTableImport text
	declare @oldJXMsgRspnTableImport text
	declare @oldJXMsgClientTableImport text
	declare @oldJXMsgRqstTableBody text
	declare @oldJXMsgRspnTableBody text
	declare @oldJXMsgClientTableBody text
	declare @oldDefaultVisibility char(1)
	declare @oldAuditCreatedAt bigdatetime
	declare @oldAuditCreatedBy varchar(36)
	declare @oldAuditUpdatedAt bigdatetime
	declare @oldAuditUpdatedBy varchar(36)
	declare @permissionFlag int
	declare @deltablemethodsTenantId bigint
	declare @deltablemethodsId bigint
	declare @deltablechainTenantId bigint
	declare @deltablechainId bigint
	declare @deltablerelationcolTenantId bigint
	declare @deltablerelationcolId bigint
	declare @deltablerelationTenantId bigint
	declare @deltablerelationId bigint
	declare @deltableindexcolTenantId bigint
	declare @deltableindexcolId bigint
	declare @deltableindexTenantId bigint
	declare @deltableindexId bigint
	declare @deltablecolumnsTenantId bigint
	declare @deltablecolumnsId bigint
begin
	update cfbam23..scopedef
	set forcesynclock = forcesynclock + 1
	where
			tenantid = @argTenantId
		and id = @argId
	select @rc = @@rowcount
	if @rc != 1
	begin
		raiserror 17004 "Data collision detected -- primary key does not exist"
	end

	select
		@oldClassCode = scop.classcode,
		@oldAuditCreatedAt = scop.createdat,
		@oldAuditCreatedBy = scop.createdby,
		@oldAuditUpdatedAt = scop.updatedat,
		@oldAuditUpdatedBy = scop.updatedby,
		@oldTenantId = scop.tenantid,
		@oldId = scop.id,
		@oldSchemaDefId = tbld.schemadefid,
		@oldDefSchemaTenantId = tbld.defschtentid,
		@oldDefSchemaId = tbld.defschid,
		@oldName = tbld.name,
		@oldDbName = tbld.dbname,
		@oldShortName = tbld.short_name,
		@oldLabel = tbld.label,
		@oldShortDescription = tbld.short_descr,
		@oldDescription = tbld.descr,
		@oldPrimaryIndexTenantId = tbld.primidxtentid,
		@oldPrimaryIndexId = tbld.primidxid,
		@oldTableClassCode = tbld.tblclscd,
		@oldLookupIndexTenantId = tbld.lookidxtentid,
		@oldLookupIndexId = tbld.lookidxid,
		@oldAltIndexTenantId = tbld.altidxtentid,
		@oldAltIndexId = tbld.altidxid,
		@oldQualifyingTenantId = tbld.qualtentid,
		@oldQualifyingTableId = tbld.qualtblid,
		@oldPolyBase = tbld.polybase,
		@oldIsInstantiable = tbld.isinstantiable,
		@oldHasHistory = tbld.hashistory,
		@oldHasAuditColumns = tbld.hasauditcolumns,
		@oldLoaderBehaviourId = tbld.loadbehavid,
		@oldDataScopeId = tbld.datascopeid,
		@oldSecurityScopeId = tbld.secscopeid,
		@oldViewAccessSecurityId = tbld.vasecid,
		@oldEditAccessSecurityId = tbld.easecid,
		@oldViewAccessFrequencyId = tbld.vafid,
		@oldEditAccessFrequencyId = tbld.eafid,
		@oldJObjMembers = tbld.jobj_memb,
		@oldJObjInterface = tbld.jobj_xface,
		@oldJObjImport = tbld.jtbl_objimp,
		@oldJObjImplementation = tbld.jobj_impl,
		@oldJEditObjMembers = tbld.jedt_memb,
		@oldJEditObjInterface = tbld.jedt_xface,
		@oldJEditObjImport = tbld.jtbl_eobjimp,
		@oldJEditObjImplementation = tbld.jedt_impl,
		@oldJTableImport = tbld.jtbl_imp,
		@oldJTableMembers = tbld.jtbl_memb,
		@oldJTableInterface = tbld.jtbl_xface,
		@oldJTableImplementation = tbld.jtbl_impl,
		@oldJTableObjImport = tbld.jtbl_objimp,
		@oldJTableObjMembers = tbld.jtbl_objmemb,
		@oldJTableObjInterface = tbld.jtbl_objxface,
		@oldJTableObjImplementation = tbld.jtbl_objimpl,
		@oldJDb2LUWTableImport = tbld.jtbl_db2imp,
		@oldJDb2LUWTableMembers = tbld.jdb2_memb,
		@oldJDb2LUWTableImplementation = tbld.jdb2_impl,
		@oldJMSSqlTableImport = tbld.jtbl_msimp,
		@oldJMSSqlTableMembers = tbld.jmssql_memb,
		@oldJMSSqlTableImplementation = tbld.jmssql_impl,
		@oldJMySqlTableImport = tbld.jtbl_myimp,
		@oldJMySqlTableMembers = tbld.jmysql_memb,
		@oldJMySqlTableImplementation = tbld.jmysql_impl,
		@oldJOracleTableImport = tbld.jtbl_oraimp,
		@oldJOracleTableMembers = tbld.joracle_memb,
		@oldJOracleTableImplementation = tbld.joracle_impl,
		@oldJPgSqlTableImport = tbld.jtbl_pgimp,
		@oldJPgSqlTableMembers = tbld.jpgsql_memb,
		@oldJPgSqlTableImplementation = tbld.jpgsql_impl,
		@oldJSybaseTableImport = tbld.jtbl_sybaseimp,
		@oldJSybaseTableMembers = tbld.jsybase_memb,
		@oldJSybaseTableImplementation = tbld.jsybase_impl,
		@oldJRamTableImport = tbld.jtbl_ramimp,
		@oldJRamTableMembers = tbld.jram_memb,
		@oldJRamTableImplementation = tbld.jram_impl,
		@oldJSaxLoaderImport = tbld.jtbl_saxldimp,
		@oldJSaxLoaderStartElement = tbld.jsaxstart_memb,
		@oldJSaxLoaderEndElement = tbld.jsaxend_impl,
		@oldJXMsgTableImport = tbld.jxmtbl_imp,
		@oldJXMsgTableFormatters = tbld.jxmtbl_fmt,
		@oldJXMsgRqstTableImport = tbld.jxmtbl_rqstimp,
		@oldJXMsgRspnTableImport = tbld.jxmtbl_rspnimp,
		@oldJXMsgClientTableImport = tbld.jxmtbl_clntimp,
		@oldJXMsgRqstTableBody = tbld.jxmtbl_rqstbdy,
		@oldJXMsgRspnTableBody = tbld.jxmtbl_rspnbdy,
		@oldJXMsgClientTableBody = tbld.jxmtbl_clntbdy,
		@oldDefaultVisibility = tbld.dflt_vis,
		@oldRevision = scop.revision
	from cfbam23..tbldef as tbld
			inner join cfbam23..scopedef scop on
				tbld.tenantid = scop.tenantid
				and tbld.id = scop.id
	where
			scop.tenantid = @argTenantId
			and scop.id = @argId
	if @argRevision != @oldRevision
	begin
		raiserror 17000 "sp_delete_tbldef() Data collision detected"
	end

	exec sp_is_tenant_user @permissionFlag output, @secTenantId, 'DeleteTable', @argAuditUserId
	if( @permissionFlag = 0 )
	begin
		raiserror 17008 "Permission denied -- User not found in tenant TSecGroup for DeleteTable"
	end

	if( @oldClassCode = 'TBLD' )
	begin
		insert into cfbam23..tbldef_h (
			tenantid,
			id,
			classcode,
			auditclusterid,
			auditsessionid,
			auditstamp,
			schemadefid,
			defschtentid,
			defschid,
			name,
			dbname,
			short_name,
			label,
			short_descr,
			descr,
			primidxtentid,
			primidxid,
			tblclscd,
			lookidxtentid,
			lookidxid,
			altidxtentid,
			altidxid,
			qualtentid,
			qualtblid,
			polybase,
			isinstantiable,
			hashistory,
			hasauditcolumns,
			loadbehavid,
			datascopeid,
			secscopeid,
			vasecid,
			easecid,
			vafid,
			eafid,
			jobj_memb,
			jobj_xface,
			jtbl_objimp,
			jobj_impl,
			jedt_memb,
			jedt_xface,
			jtbl_eobjimp,
			jedt_impl,
			jtbl_imp,
			jtbl_memb,
			jtbl_xface,
			jtbl_impl,
			jtbl_objimp,
			jtbl_objmemb,
			jtbl_objxface,
			jtbl_objimpl,
			jtbl_db2imp,
			jdb2_memb,
			jdb2_impl,
			jtbl_msimp,
			jmssql_memb,
			jmssql_impl,
			jtbl_myimp,
			jmysql_memb,
			jmysql_impl,
			jtbl_oraimp,
			joracle_memb,
			joracle_impl,
			jtbl_pgimp,
			jpgsql_memb,
			jpgsql_impl,
			jtbl_sybaseimp,
			jsybase_memb,
			jsybase_impl,
			jtbl_ramimp,
			jram_memb,
			jram_impl,
			jtbl_saxldimp,
			jsaxstart_memb,
			jsaxend_impl,
			jxmtbl_imp,
			jxmtbl_fmt,
			jxmtbl_rqstimp,
			jxmtbl_rspnimp,
			jxmtbl_clntimp,
			jxmtbl_rqstbdy,
			jxmtbl_rspnbdy,
			jxmtbl_clntbdy,
			dflt_vis,
			revision,
			auditaction )
		select
			scop.tenantid,
			scop.id,
			scop.classcode,
			@argAuditClusterId,
			@argAuditSessionId,
			current_bigdatetime(),
			tbld.schemadefid,
			tbld.defschtentid,
			tbld.defschid,
			tbld.name,
			tbld.dbname,
			tbld.short_name,
			tbld.label,
			tbld.short_descr,
			tbld.descr,
			tbld.primidxtentid,
			tbld.primidxid,
			tbld.tblclscd,
			tbld.lookidxtentid,
			tbld.lookidxid,
			tbld.altidxtentid,
			tbld.altidxid,
			tbld.qualtentid,
			tbld.qualtblid,
			tbld.polybase,
			tbld.isinstantiable,
			tbld.hashistory,
			tbld.hasauditcolumns,
			tbld.loadbehavid,
			tbld.datascopeid,
			tbld.secscopeid,
			tbld.vasecid,
			tbld.easecid,
			tbld.vafid,
			tbld.eafid,
			tbld.jobj_memb,
			tbld.jobj_xface,
			tbld.jtbl_objimp,
			tbld.jobj_impl,
			tbld.jedt_memb,
			tbld.jedt_xface,
			tbld.jtbl_eobjimp,
			tbld.jedt_impl,
			tbld.jtbl_imp,
			tbld.jtbl_memb,
			tbld.jtbl_xface,
			tbld.jtbl_impl,
			tbld.jtbl_objimp,
			tbld.jtbl_objmemb,
			tbld.jtbl_objxface,
			tbld.jtbl_objimpl,
			tbld.jtbl_db2imp,
			tbld.jdb2_memb,
			tbld.jdb2_impl,
			tbld.jtbl_msimp,
			tbld.jmssql_memb,
			tbld.jmssql_impl,
			tbld.jtbl_myimp,
			tbld.jmysql_memb,
			tbld.jmysql_impl,
			tbld.jtbl_oraimp,
			tbld.joracle_memb,
			tbld.joracle_impl,
			tbld.jtbl_pgimp,
			tbld.jpgsql_memb,
			tbld.jpgsql_impl,
			tbld.jtbl_sybaseimp,
			tbld.jsybase_memb,
			tbld.jsybase_impl,
			tbld.jtbl_ramimp,
			tbld.jram_memb,
			tbld.jram_impl,
			tbld.jtbl_saxldimp,
			tbld.jsaxstart_memb,
			tbld.jsaxend_impl,
			tbld.jxmtbl_imp,
			tbld.jxmtbl_fmt,
			tbld.jxmtbl_rqstimp,
			tbld.jxmtbl_rspnimp,
			tbld.jxmtbl_clntimp,
			tbld.jxmtbl_rqstbdy,
			tbld.jxmtbl_rspnbdy,
			tbld.jxmtbl_clntbdy,
			tbld.dflt_vis,
			@argRevision + 1,
			3
		from cfbam23..tbldef as tbld
			inner join cfbam23..scopedef scop on
				tbld.tenantid = scop.tenantid
				and tbld.id = scop.id
		where
			tbld.tenantid = @argTenantId
			and tbld.id = @argId
	end
	update cfbam23..tbldef
	set
		tenantid = @argTenantId,
		lookidxtentid = null,
		lookidxid = null,
		altidxtentid = null,
		altidxid = null,
		primidxtentid = null,
		primidxid = null
	where
		tenantid = @argTenantId
		and id = @argId

	declare cursDelTableMethods insensitive cursor for
		select
			srvm.tenantid,
			srvm.id
		from cfbam23..tbldef as tbld
			inner join cfbam23..srvmeth srvm on
				tbld.tenantid = srvm.tenantid
				and tbld.id = srvm.tableid
		where
			tbld.tenantid = @argTenantId
			and tbld.id = @argId


	open cursDelTableMethods
	fetch cursDelTableMethods into
			@deltablemethodsTenantId,
			@deltablemethodsId
	while ( @@sqlstatus = 0 )
	begin
		exec sp_delete_srvmeth_by_ididx @argAuditClusterId,
			@argAuditUserId,
			@argAuditSessionId,
			@secClusterId,
			@secTenantId,
			@deltablemethodsTenantId,
			@deltablemethodsId
		fetch cursDelTableMethods into
			@deltablemethodsTenantId,
			@deltablemethodsId
	end
	close cursDelTableMethods


	declare cursDelTableChain insensitive cursor for
		select
			chn.tenantid,
			chn.id
		from cfbam23..tbldef as tbld
			inner join cfbam23..chain_def chn on
				tbld.tenantid = chn.tenantid
				and tbld.id = chn.tableid
		where
			tbld.tenantid = @argTenantId
			and tbld.id = @argId


	open cursDelTableChain
	fetch cursDelTableChain into
			@deltablechainTenantId,
			@deltablechainId
	while ( @@sqlstatus = 0 )
	begin
		exec sp_delete_chain_def_by_ididx @argAuditClusterId,
			@argAuditUserId,
			@argAuditSessionId,
			@secClusterId,
			@secTenantId,
			@deltablechainTenantId,
			@deltablechainId
		fetch cursDelTableChain into
			@deltablechainTenantId,
			@deltablechainId
	end
	close cursDelTableChain


	declare cursDelTableRelationCol insensitive cursor for
		select
			relc.tenantid,
			relc.id
		from cfbam23..tbldef as tbld
			inner join cfbam23..reldef reld on
				tbld.tenantid = reld.tenantid
				and tbld.id = reld.tableid
			inner join cfbam23..relcol relc on
				reld.tenantid = relc.tenantid
				and reld.id = relc.relationid
		where
			tbld.tenantid = @argTenantId
			and tbld.id = @argId


	open cursDelTableRelationCol
	fetch cursDelTableRelationCol into
			@deltablerelationcolTenantId,
			@deltablerelationcolId
	while ( @@sqlstatus = 0 )
	begin
		exec sp_delete_relcol_by_ididx @argAuditClusterId,
			@argAuditUserId,
			@argAuditSessionId,
			@secClusterId,
			@secTenantId,
			@deltablerelationcolTenantId,
			@deltablerelationcolId
		fetch cursDelTableRelationCol into
			@deltablerelationcolTenantId,
			@deltablerelationcolId
	end
	close cursDelTableRelationCol


	declare cursDelTableRelation insensitive cursor for
		select
			reld.tenantid,
			reld.id
		from cfbam23..tbldef as tbld
			inner join cfbam23..reldef reld on
				tbld.tenantid = reld.tenantid
				and tbld.id = reld.tableid
		where
			tbld.tenantid = @argTenantId
			and tbld.id = @argId


	open cursDelTableRelation
	fetch cursDelTableRelation into
			@deltablerelationTenantId,
			@deltablerelationId
	while ( @@sqlstatus = 0 )
	begin
		exec sp_delete_reldef_by_ididx @argAuditClusterId,
			@argAuditUserId,
			@argAuditSessionId,
			@secClusterId,
			@secTenantId,
			@deltablerelationTenantId,
			@deltablerelationId
		fetch cursDelTableRelation into
			@deltablerelationTenantId,
			@deltablerelationId
	end
	close cursDelTableRelation


	declare cursDelTableIndexCol insensitive cursor for
		select
			idxc.tenantid,
			idxc.id
		from cfbam23..tbldef as tbld
			inner join cfbam23..idxdef idxd on
				tbld.tenantid = idxd.tenantid
				and tbld.id = idxd.tableid
			inner join cfbam23..idxcol idxc on
				idxd.tenantid = idxc.tenantid
				and idxd.id = idxc.indexid
		where
			tbld.tenantid = @argTenantId
			and tbld.id = @argId


	open cursDelTableIndexCol
	fetch cursDelTableIndexCol into
			@deltableindexcolTenantId,
			@deltableindexcolId
	while ( @@sqlstatus = 0 )
	begin
		exec sp_delete_idxcol_by_ididx @argAuditClusterId,
			@argAuditUserId,
			@argAuditSessionId,
			@secClusterId,
			@secTenantId,
			@deltableindexcolTenantId,
			@deltableindexcolId
		fetch cursDelTableIndexCol into
			@deltableindexcolTenantId,
			@deltableindexcolId
	end
	close cursDelTableIndexCol


	declare cursDelTableIndex insensitive cursor for
		select
			idxd.tenantid,
			idxd.id
		from cfbam23..tbldef as tbld
			inner join cfbam23..idxdef idxd on
				tbld.tenantid = idxd.tenantid
				and tbld.id = idxd.tableid
		where
			tbld.tenantid = @argTenantId
			and tbld.id = @argId


	open cursDelTableIndex
	fetch cursDelTableIndex into
			@deltableindexTenantId,
			@deltableindexId
	while ( @@sqlstatus = 0 )
	begin
		exec sp_delete_idxdef_by_ididx @argAuditClusterId,
			@argAuditUserId,
			@argAuditSessionId,
			@secClusterId,
			@secTenantId,
			@deltableindexTenantId,
			@deltableindexId
		fetch cursDelTableIndex into
			@deltableindexTenantId,
			@deltableindexId
	end
	close cursDelTableIndex


	declare cursDelTableColumns insensitive cursor for
		select
			valu.tenantid,
			valu.id
		from cfbam23..tbldef as tbld
			inner join cfbam23..valdef valu on
				tbld.tenantid = valu.tenantid
				and tbld.id = valu.scopeid
		where
			tbld.tenantid = @argTenantId
			and tbld.id = @argId


	open cursDelTableColumns
	fetch cursDelTableColumns into
			@deltablecolumnsTenantId,
			@deltablecolumnsId
	while ( @@sqlstatus = 0 )
	begin
		exec sp_delete_valdef_by_ididx @argAuditClusterId,
			@argAuditUserId,
			@argAuditSessionId,
			@secClusterId,
			@secTenantId,
			@deltablecolumnsTenantId,
			@deltablecolumnsId
		fetch cursDelTableColumns into
			@deltablecolumnsTenantId,
			@deltablecolumnsId
	end
	close cursDelTableColumns

	delete from cfbam23..tbldef
	where
		tenantid = @argTenantId
		and id = @argId
	select @rc = @@rowcount

	if @rc != 1
	begin
		raiserror 17004 "sp_delete_tbldef() Data collision detected"
	end
	delete from cfbam23..scopedef
	where
		tenantid = @argTenantId
		and id = @argId
		and revision = @argRevision
	select @rc = @@rowcount

	if @rc != 1
	begin
		raiserror 17004 "sp_delete_tbldef() Data collision detected"
	end
end
go
