--
--	@(#) dbcreate/cfbam/sybase/crsp_delete_tenant.isql
--
--	CFBam
--
--	Copyright (c) 2014-2015 Mark Sobkow
--	
--	This program is available as free software under the GNU GPL v3, under
--	the Eclipse Public License 1.0, or under a commercial license from Mark
--	Sobkow.  For commercial licensing details, please contact msobkow@sasktel.net.
--	
--	You should have received copies of the complete license text for
--	GPLv3.txt and EPLv1_0.txt, containing the text
--	of the GNU General Public License v 3.0 and the Eclipse Public License v 1.0.
--	
--	Under the terms of the GPL:
--	
--		This program is free software: you can redistribute it and/or modify
--		it under the terms of the GNU General Public License as published by
--		the Free Software Foundation, either version 3 of the License, or
--		(at your option) any later version.
--	  
--		This program is distributed in the hope that it will be useful,
--		but WITHOUT ANY WARRANTY; without even the implied warranty of
--		MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--		GNU General Public License for more details.
--	  
--		You should have received a copy of the GNU General Public License
--		along with this program.  If not, see <http://www.gnu.org/licenses/>.
--	
--	This software incorporates code originally Copyright (c) Mark Sobkow 2014-2015
--	and licensed under the BSD 3-Clause license as written by xfree86.org:
--	
--	Redistribution and use in source and binary forms, with or without
--	modification, are permitted provided that the following conditions are
--	met:
--	
--	    (1) Redistributions of source code must retain the above copyright
--	    notice, this list of conditions and the following disclaimer. 
--	
--	    (2) Redistributions in binary form must reproduce the above copyright
--	    notice, this list of conditions and the following disclaimer in
--	    the documentation and/or other materials provided with the
--	    distribution.  
--	    
--	    (3)The name of the author may not be used to
--	    endorse or promote products derived from this software without
--	    specific prior written permission.
--	
--	THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
--	IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
--	WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
--	DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
--	INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
--	(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
--	SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
--	HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
--	STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
--	IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
--	POSSIBILITY OF SUCH DAMAGE.
--	
--
-- **********************************************************************
--
--	Code manufactured by MSS Code Factory
--

if exists ( select * from sysobjects where name = 'sp_delete_tenant' )
begin
	drop proc sp_delete_tenant
end
go

create proc sp_delete_tenant
	@argAuditClusterId bigint,
	@argAuditUserId varchar(36),
	@argAuditSessionId varchar(36),
	@secClusterId bigint,
	@secTenantId bigint,
	@argId bigint,
	@argRevision int
as	declare @oldRevision int
	declare @rc int
	declare @oldClusterId bigint
	declare @oldId bigint
	declare @oldTenantName varchar(192)
	declare @oldAuditCreatedAt bigdatetime
	declare @oldAuditCreatedBy varchar(36)
	declare @oldAuditUpdatedAt bigdatetime
	declare @oldAuditUpdatedBy varchar(36)
	declare @permissionFlag int
	declare @cleartablerelationnarrowedTenantId bigint
	declare @cleartablerelationnarrowedId bigint
	declare @deltablechainTenantId bigint
	declare @deltablechainId bigint
	declare @deltablerelationcolTenantId bigint
	declare @deltablerelationcolId bigint
	declare @deltablerelationTenantId bigint
	declare @deltablerelationId bigint
	declare @deltableTenantId bigint
	declare @deltableId bigint
	declare @deltypedefTenantId bigint
	declare @deltypedefId bigint
	declare @delschemadefTenantId bigint
	declare @delschemadefId bigint
	declare @deltopdomainsTenantId bigint
	declare @deltopdomainsId bigint
	declare @deltldsTenantId bigint
	declare @deltldsTldId bigint
	declare @deldomainbaseTenantId bigint
	declare @deldomainbaseId bigint
	declare @delincludedbygroupTenantId bigint
	declare @delincludedbygroupTSecGroupIncludeId bigint
	declare @delgroupmembersTenantId bigint
	declare @delgroupmembersTSecGroupMemberId bigint
	declare @delgroupincludesTenantId bigint
	declare @delgroupincludesTSecGroupIncludeId bigint
	declare @deltsecgroupsTenantId bigint
	declare @deltsecgroupsTSecGroupId integer
begin
	update cfbam23..tenant
	set forcesynclock = forcesynclock + 1
	where
			id = @argId
	select @rc = @@rowcount
	if @rc != 1
	begin
		raiserror 17004 "Data collision detected -- primary key does not exist"
	end

	select
		@oldAuditCreatedAt = tent.createdat,
		@oldAuditCreatedBy = tent.createdby,
		@oldAuditUpdatedAt = tent.updatedat,
		@oldAuditUpdatedBy = tent.updatedby,
		@oldClusterId = tent.clusterid,
		@oldId = tent.id,
		@oldTenantName = tent.tenantname,
		@oldRevision = tent.revision
	from cfbam23..tenant as tent
	where
			tent.id = @argId
	if @argRevision != @oldRevision
	begin
		raiserror 17000 "sp_delete_tenant() Data collision detected"
	end

	exec sp_is_system_user @permissionFlag output, @argAuditUserId
	if( @permissionFlag = 0 )
	begin
		raiserror 17008 "Permission denied -- only system user can delete Tenant records"
	end

	insert into cfbam23..tenant_h (
			id,
			auditclusterid,
			auditsessionid,
			auditstamp,
			clusterid,
			tenantname,
			revision,
			auditaction )
		select
			tent.id,
			@argAuditClusterId,
			@argAuditSessionId,
			current_bigdatetime(),
			tent.clusterid,
			tent.tenantname,
			@argRevision + 1,
			3
		from cfbam23..tenant as tent
		where
			tent.id = @argId

	declare cursClearTableRelationNarrowed insensitive cursor for
		select
			reld.tenantid as tenantid,
			reld.id as id
		from cfbam23..tenant as tent
			inner join cfbam23..schemadef schm on
				tent.id = schm.tenantid
			inner join cfbam23..tbldef tbld on
				schm.tenantid = tbld.tenantid
				and schm.id = tbld.schemadefid
			inner join cfbam23..reldef reld on
				tbld.tenantid = reld.tenantid
				and tbld.id = reld.tableid
		where
			tent.id = @argId

	open cursClearTableRelationNarrowed
	fetch cursClearTableRelationNarrowed into
			@cleartablerelationnarrowedTenantId,
			@cleartablerelationnarrowedId
	while ( @@sqlstatus = 0 )
	begin
		update cfbam23..reldef
		set
			narrowedtenantid = null,
			narrowedid = null
		where
			tenantid = @cleartablerelationnarrowedTenantId
			and id = @cleartablerelationnarrowedId
		fetch cursClearTableRelationNarrowed into
			@cleartablerelationnarrowedTenantId,
			@cleartablerelationnarrowedId
	end
	close cursClearTableRelationNarrowed


	declare cursDelTableChain insensitive cursor for
		select
			chn.tenantid,
			chn.id
		from cfbam23..tenant as tent
			inner join cfbam23..schemadef schm on
				tent.id = schm.tenantid
			inner join cfbam23..tbldef tbld on
				schm.tenantid = tbld.tenantid
				and schm.id = tbld.schemadefid
			inner join cfbam23..chain_def chn on
				tbld.tenantid = chn.tenantid
				and tbld.id = chn.tableid
		where
			tent.id = @argId


	open cursDelTableChain
	fetch cursDelTableChain into
			@deltablechainTenantId,
			@deltablechainId
	while ( @@sqlstatus = 0 )
	begin
		exec sp_delete_chain_def_by_ididx @argAuditClusterId,
			@argAuditUserId,
			@argAuditSessionId,
			@secClusterId,
			@secTenantId,
			@deltablechainTenantId,
			@deltablechainId
		fetch cursDelTableChain into
			@deltablechainTenantId,
			@deltablechainId
	end
	close cursDelTableChain


	declare cursDelTableRelationCol insensitive cursor for
		select
			relc.tenantid,
			relc.id
		from cfbam23..tenant as tent
			inner join cfbam23..schemadef schm on
				tent.id = schm.tenantid
			inner join cfbam23..tbldef tbld on
				schm.tenantid = tbld.tenantid
				and schm.id = tbld.schemadefid
			inner join cfbam23..reldef reld on
				tbld.tenantid = reld.tenantid
				and tbld.id = reld.tableid
			inner join cfbam23..relcol relc on
				reld.tenantid = relc.tenantid
				and reld.id = relc.relationid
		where
			tent.id = @argId


	open cursDelTableRelationCol
	fetch cursDelTableRelationCol into
			@deltablerelationcolTenantId,
			@deltablerelationcolId
	while ( @@sqlstatus = 0 )
	begin
		exec sp_delete_relcol_by_ididx @argAuditClusterId,
			@argAuditUserId,
			@argAuditSessionId,
			@secClusterId,
			@secTenantId,
			@deltablerelationcolTenantId,
			@deltablerelationcolId
		fetch cursDelTableRelationCol into
			@deltablerelationcolTenantId,
			@deltablerelationcolId
	end
	close cursDelTableRelationCol


	declare cursDelTableRelation insensitive cursor for
		select
			reld.tenantid,
			reld.id
		from cfbam23..tenant as tent
			inner join cfbam23..schemadef schm on
				tent.id = schm.tenantid
			inner join cfbam23..tbldef tbld on
				schm.tenantid = tbld.tenantid
				and schm.id = tbld.schemadefid
			inner join cfbam23..reldef reld on
				tbld.tenantid = reld.tenantid
				and tbld.id = reld.tableid
		where
			tent.id = @argId


	open cursDelTableRelation
	fetch cursDelTableRelation into
			@deltablerelationTenantId,
			@deltablerelationId
	while ( @@sqlstatus = 0 )
	begin
		exec sp_delete_reldef_by_ididx @argAuditClusterId,
			@argAuditUserId,
			@argAuditSessionId,
			@secClusterId,
			@secTenantId,
			@deltablerelationTenantId,
			@deltablerelationId
		fetch cursDelTableRelation into
			@deltablerelationTenantId,
			@deltablerelationId
	end
	close cursDelTableRelation


	declare cursDelTable insensitive cursor for
		select
			tbld.tenantid,
			tbld.id
		from cfbam23..tenant as tent
			inner join cfbam23..schemadef schm on
				tent.id = schm.tenantid
			inner join cfbam23..tbldef tbld on
				schm.tenantid = tbld.tenantid
				and schm.id = tbld.schemadefid
		where
			tent.id = @argId


	open cursDelTable
	fetch cursDelTable into
			@deltableTenantId,
			@deltableId
	while ( @@sqlstatus = 0 )
	begin
		exec sp_delete_tbldef_by_ididx @argAuditClusterId,
			@argAuditUserId,
			@argAuditSessionId,
			@secClusterId,
			@secTenantId,
			@deltableTenantId,
			@deltableId
		fetch cursDelTable into
			@deltableTenantId,
			@deltableId
	end
	close cursDelTable


	declare cursDelTypeDef insensitive cursor for
		select
			valu.tenantid,
			valu.id
		from cfbam23..tenant as tent
			inner join cfbam23..schemadef schm on
				tent.id = schm.tenantid
			inner join cfbam23..valdef valu on
				schm.tenantid = valu.tenantid
				and schm.id = valu.scopeid
		where
			tent.id = @argId


	open cursDelTypeDef
	fetch cursDelTypeDef into
			@deltypedefTenantId,
			@deltypedefId
	while ( @@sqlstatus = 0 )
	begin
		exec sp_delete_valdef_by_ididx @argAuditClusterId,
			@argAuditUserId,
			@argAuditSessionId,
			@secClusterId,
			@secTenantId,
			@deltypedefTenantId,
			@deltypedefId
		fetch cursDelTypeDef into
			@deltypedefTenantId,
			@deltypedefId
	end
	close cursDelTypeDef


	declare cursDelSchemaDef insensitive cursor for
		select
			schm.tenantid,
			schm.id
		from cfbam23..tenant as tent
			inner join cfbam23..schemadef schm on
				tent.id = schm.tenantid
		where
			tent.id = @argId


	open cursDelSchemaDef
	fetch cursDelSchemaDef into
			@delschemadefTenantId,
			@delschemadefId
	while ( @@sqlstatus = 0 )
	begin
		exec sp_delete_schemadef_by_ididx @argAuditClusterId,
			@argAuditUserId,
			@argAuditSessionId,
			@secClusterId,
			@secTenantId,
			@delschemadefTenantId,
			@delschemadefId
		fetch cursDelSchemaDef into
			@delschemadefTenantId,
			@delschemadefId
	end
	close cursDelSchemaDef


	declare cursDelTopDomains insensitive cursor for
		select
			tdom.tenantid,
			tdom.id
		from cfbam23..tenant as tent
			inner join cfbam23..tlddef gtld on
				tent.id = gtld.tenantid
			inner join cfbam23..tdomdef tdom on
				gtld.tenantid = tdom.tenantid
				and gtld.tldid = tdom.tldid
		where
			tent.id = @argId


	open cursDelTopDomains
	fetch cursDelTopDomains into
			@deltopdomainsTenantId,
			@deltopdomainsId
	while ( @@sqlstatus = 0 )
	begin
		exec sp_delete_tdomdef_by_ididx @argAuditClusterId,
			@argAuditUserId,
			@argAuditSessionId,
			@secClusterId,
			@secTenantId,
			@deltopdomainsTenantId,
			@deltopdomainsId
		fetch cursDelTopDomains into
			@deltopdomainsTenantId,
			@deltopdomainsId
	end
	close cursDelTopDomains


	declare cursDelTlds insensitive cursor for
		select
			gtld.tenantid,
			gtld.tldid
		from cfbam23..tenant as tent
			inner join cfbam23..tlddef gtld on
				tent.id = gtld.tenantid
		where
			tent.id = @argId


	open cursDelTlds
	fetch cursDelTlds into
			@deltldsTenantId,
			@deltldsTldId
	while ( @@sqlstatus = 0 )
	begin
		exec sp_delete_tlddef_by_ididx @argAuditClusterId,
			@argAuditUserId,
			@argAuditSessionId,
			@secClusterId,
			@secTenantId,
			@deltldsTenantId,
			@deltldsTldId
		fetch cursDelTlds into
			@deltldsTenantId,
			@deltldsTldId
	end
	close cursDelTlds


	declare cursDelDomainBase insensitive cursor for
		select
			bdom.tenantid,
			bdom.id
		from cfbam23..tenant as tent
			inner join cfbam23..bdomdef bdom on
				tent.id = bdom.tenantid
		where
			tent.id = @argId


	open cursDelDomainBase
	fetch cursDelDomainBase into
			@deldomainbaseTenantId,
			@deldomainbaseId
	while ( @@sqlstatus = 0 )
	begin
		exec sp_delete_bdomdef_by_ididx @argAuditClusterId,
			@argAuditUserId,
			@argAuditSessionId,
			@secClusterId,
			@secTenantId,
			@deldomainbaseTenantId,
			@deldomainbaseId
		fetch cursDelDomainBase into
			@deldomainbaseTenantId,
			@deldomainbaseId
	end
	close cursDelDomainBase


	declare cursDelIncludedByGroup insensitive cursor for
		select
			tgnc.tenantid,
			tgnc.tsecgrpincid
		from cfbam23..tenant as tent
			inner join cfbam23..TSecGrp tgrp on
				tent.id = tgrp.tenantid
			inner join cfbam23..TSecInc tgnc on
				tgrp.tenantid = tgnc.tenantid
				and tgrp.tsecgroupid = tgnc.incgrpid
		where
			tent.id = @argId


	open cursDelIncludedByGroup
	fetch cursDelIncludedByGroup into
			@delincludedbygroupTenantId,
			@delincludedbygroupTSecGroupIncludeId
	while ( @@sqlstatus = 0 )
	begin
		exec sp_delete_tsecinc_by_ididx @argAuditClusterId,
			@argAuditUserId,
			@argAuditSessionId,
			@secClusterId,
			@secTenantId,
			@delincludedbygroupTenantId,
			@delincludedbygroupTSecGroupIncludeId
		fetch cursDelIncludedByGroup into
			@delincludedbygroupTenantId,
			@delincludedbygroupTSecGroupIncludeId
	end
	close cursDelIncludedByGroup


	declare cursDelGroupMembers insensitive cursor for
		select
			tgmb.tenantid,
			tgmb.tsecgroupmemberid
		from cfbam23..tenant as tent
			inner join cfbam23..TSecGrp tgrp on
				tent.id = tgrp.tenantid
			inner join cfbam23..TSecMemb tgmb on
				tgrp.tenantid = tgmb.tenantid
				and tgrp.tsecgroupid = tgmb.tsecgroupid
		where
			tent.id = @argId


	open cursDelGroupMembers
	fetch cursDelGroupMembers into
			@delgroupmembersTenantId,
			@delgroupmembersTSecGroupMemberId
	while ( @@sqlstatus = 0 )
	begin
		exec sp_delete_tsecmemb_by_ididx @argAuditClusterId,
			@argAuditUserId,
			@argAuditSessionId,
			@secClusterId,
			@secTenantId,
			@delgroupmembersTenantId,
			@delgroupmembersTSecGroupMemberId
		fetch cursDelGroupMembers into
			@delgroupmembersTenantId,
			@delgroupmembersTSecGroupMemberId
	end
	close cursDelGroupMembers


	declare cursDelGroupIncludes insensitive cursor for
		select
			tgnc.tenantid,
			tgnc.tsecgrpincid
		from cfbam23..tenant as tent
			inner join cfbam23..TSecGrp tgrp on
				tent.id = tgrp.tenantid
			inner join cfbam23..TSecInc tgnc on
				tgrp.tenantid = tgnc.tenantid
				and tgrp.tsecgroupid = tgnc.tsecgrpid
		where
			tent.id = @argId


	open cursDelGroupIncludes
	fetch cursDelGroupIncludes into
			@delgroupincludesTenantId,
			@delgroupincludesTSecGroupIncludeId
	while ( @@sqlstatus = 0 )
	begin
		exec sp_delete_tsecinc_by_ididx @argAuditClusterId,
			@argAuditUserId,
			@argAuditSessionId,
			@secClusterId,
			@secTenantId,
			@delgroupincludesTenantId,
			@delgroupincludesTSecGroupIncludeId
		fetch cursDelGroupIncludes into
			@delgroupincludesTenantId,
			@delgroupincludesTSecGroupIncludeId
	end
	close cursDelGroupIncludes


	declare cursDelTSecGroups insensitive cursor for
		select
			tgrp.tenantid,
			tgrp.tsecgroupid
		from cfbam23..tenant as tent
			inner join cfbam23..TSecGrp tgrp on
				tent.id = tgrp.tenantid
		where
			tent.id = @argId


	open cursDelTSecGroups
	fetch cursDelTSecGroups into
			@deltsecgroupsTenantId,
			@deltsecgroupsTSecGroupId
	while ( @@sqlstatus = 0 )
	begin
		exec sp_delete_tsecgrp_by_ididx @argAuditClusterId,
			@argAuditUserId,
			@argAuditSessionId,
			@secClusterId,
			@secTenantId,
			@deltsecgroupsTenantId,
			@deltsecgroupsTSecGroupId
		fetch cursDelTSecGroups into
			@deltsecgroupsTenantId,
			@deltsecgroupsTSecGroupId
	end
	close cursDelTSecGroups

	delete from cfbam23..tenant
	where
		id = @argId
		and revision = @argRevision
	select @rc = @@rowcount

	if @rc != 1
	begin
		raiserror 17004 "sp_delete_tenant() Data collision detected"
	end
end
go
