--
--	@(#) dbcreate/cfbam/sybase/crsp_read_int64typ_by_defschemaidx.isql
--
--	CFBam
--
--	Copyright (c) 2014-2015 Mark Sobkow
--	
--	This program is available as free software under the GNU GPL v3, under
--	the Eclipse Public License 1.0, or under a commercial license from Mark
--	Sobkow.  For commercial licensing details, please contact msobkow@sasktel.net.
--	
--	You should have received copies of the complete license text for
--	GPLv3.txt and EPLv1_0.txt, containing the text
--	of the GNU General Public License v 3.0 and the Eclipse Public License v 1.0.
--	
--	Under the terms of the GPL:
--	
--		This program is free software: you can redistribute it and/or modify
--		it under the terms of the GNU General Public License as published by
--		the Free Software Foundation, either version 3 of the License, or
--		(at your option) any later version.
--	  
--		This program is distributed in the hope that it will be useful,
--		but WITHOUT ANY WARRANTY; without even the implied warranty of
--		MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--		GNU General Public License for more details.
--	  
--		You should have received a copy of the GNU General Public License
--		along with this program.  If not, see <http://www.gnu.org/licenses/>.
--	
--	This software incorporates code originally Copyright (c) Mark Sobkow 2014-2015
--	and licensed under the BSD 3-Clause license as written by xfree86.org:
--	
--	Redistribution and use in source and binary forms, with or without
--	modification, are permitted provided that the following conditions are
--	met:
--	
--	    (1) Redistributions of source code must retain the above copyright
--	    notice, this list of conditions and the following disclaimer. 
--	
--	    (2) Redistributions in binary form must reproduce the above copyright
--	    notice, this list of conditions and the following disclaimer in
--	    the documentation and/or other materials provided with the
--	    distribution.  
--	    
--	    (3)The name of the author may not be used to
--	    endorse or promote products derived from this software without
--	    specific prior written permission.
--	
--	THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
--	IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
--	WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
--	DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
--	INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
--	(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
--	SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
--	HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
--	STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
--	IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
--	POSSIBILITY OF SUCH DAMAGE.
--	
--
-- **********************************************************************
--
--	Code manufactured by MSS Code Factory
--

if exists ( select * from sysobjects where name = 'sp_read_int64typ_by_defschemaidx' )
begin
	drop proc sp_read_int64typ_by_defschemaidx
end
go

create proc sp_read_int64typ_by_defschemaidx
	@argAuditClusterId bigint,
	@argAuditUserId varchar(36),
	@argAuditSessionId varchar(36),
	@secClusterId bigint,
	@secTenantId bigint,
	@argDefSchemaTenantId bigint,
	@argDefSchemaId bigint
as
	declare @rc int
	declare @permissionFlag int
	declare @isSystemUser int
begin
	exec sp_is_tenant_user @permissionFlag output, @secTenantId, 'ReadInt64Type', @argAuditUserId
	if( @permissionFlag = 0 )
	begin
		raiserror 17010 "Permission denied -- User not found in tenant TSecGroup for ReadInt64Type"
	end
	exec sp_is_system_user @isSystemUser output, @argAuditUserId

	if( @isSystemUser = 1 )
	begin
		select
			valu.classcode,
			valu.createdby,
			convert( varchar, valu.createdat, 23 ) as createdat,
			valu.updatedby,
			convert( varchar, valu.updatedat, 23 ) as updatedat,
			valu.tenantid as tenantid,
			valu.scopeid as scopeid,
			valu.id as id,
			valu.defschtentid as defschtentid,
			valu.defschid as defschid,
			valu.name as name,
			valu.short_name as short_name,
			valu.label as label,
			valu.short_descr as short_descr,
			valu.descr as descr,
			valu.isnullable as isnullable,
			valu.generateid as generateid,
			valu.datascopeid as datascopeid,
			valu.vasecid as vasecid,
			valu.easecid as easecid,
			valu.vafid as vafid,
			valu.eafid as eafid,
			valu.prevtenantid as prevtenantid,
			valu.previd as previd,
			valu.nexttenantid as nexttenantid,
			valu.nextid as nextid,
			valu.dflt_vis as dflt_vis,
			atom.dbname as dbname,
			i64d.initval as initval,
			i64d.defval as defval,
			i64d.minval as minval,
			i64d.maxval as maxval,
			i64d.nullvalue as nullvalue,
			i64d.unknownval as unknownval,
			i64t.schemadefid as schemadefid,
			valu.revision as revision
		from cfbam23..int64typ as i64t
			inner join cfbam23..int64def i64d on
				i64t.tenantid = i64d.tenantid
				and i64t.id = i64d.id
			inner join cfbam23..atomdef atom on
				i64d.tenantid = atom.tenantid
				and i64d.id = atom.id
			inner join cfbam23..valdef valu on
				atom.tenantid = valu.tenantid
				and atom.id = valu.id
		where
			valu.classcode = 'I64T'
			and valu.defschtentid = @argDefSchemaTenantId
			and valu.defschid = @argDefSchemaId
			and valu.tenantid = @secTenantId
	end
	else begin
		select
			valu.classcode,
			valu.createdby,
			convert( varchar, valu.createdat, 23 ) as createdat,
			valu.updatedby,
			convert( varchar, valu.updatedat, 23 ) as updatedat,
			valu.tenantid as tenantid,
			valu.scopeid as scopeid,
			valu.id as id,
			valu.defschtentid as defschtentid,
			valu.defschid as defschid,
			valu.name as name,
			valu.short_name as short_name,
			valu.label as label,
			valu.short_descr as short_descr,
			valu.descr as descr,
			valu.isnullable as isnullable,
			valu.generateid as generateid,
			valu.datascopeid as datascopeid,
			valu.vasecid as vasecid,
			valu.easecid as easecid,
			valu.vafid as vafid,
			valu.eafid as eafid,
			valu.prevtenantid as prevtenantid,
			valu.previd as previd,
			valu.nexttenantid as nexttenantid,
			valu.nextid as nextid,
			valu.dflt_vis as dflt_vis,
			atom.dbname as dbname,
			i64d.initval as initval,
			i64d.defval as defval,
			i64d.minval as minval,
			i64d.maxval as maxval,
			i64d.nullvalue as nullvalue,
			i64d.unknownval as unknownval,
			i64t.schemadefid as schemadefid,
			valu.revision as revision
		from cfbam23..int64typ as i64t
			inner join cfbam23..int64def i64d on
				i64t.tenantid = i64d.tenantid
				and i64t.id = i64d.id
			inner join cfbam23..atomdef atom on
				i64d.tenantid = atom.tenantid
				and i64d.id = atom.id
			inner join cfbam23..valdef valu on
				atom.tenantid = valu.tenantid
				and atom.id = valu.id
		where
			valu.classcode = 'I64T'
			and valu.defschtentid = @argDefSchemaTenantId
			and valu.defschid = @argDefSchemaId
			and valu.tenantid = @secTenantId
			and valu.tenantid = @secTenantId
	end
end
go
