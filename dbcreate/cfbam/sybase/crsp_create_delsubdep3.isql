--
--	@(#) dbcreate/cfbam/sybase/crsp_create_delsubdep3.isql
--
--	CFBam
--
--	Copyright (c) 2014-2015 Mark Sobkow
--	
--	This program is available as free software under the GNU GPL v3, under
--	the Eclipse Public License 1.0, or under a commercial license from Mark
--	Sobkow.  For commercial licensing details, please contact msobkow@sasktel.net.
--	
--	You should have received copies of the complete license text for
--	GPLv3.txt and EPLv1_0.txt, containing the text
--	of the GNU General Public License v 3.0 and the Eclipse Public License v 1.0.
--	
--	Under the terms of the GPL:
--	
--		This program is free software: you can redistribute it and/or modify
--		it under the terms of the GNU General Public License as published by
--		the Free Software Foundation, either version 3 of the License, or
--		(at your option) any later version.
--	  
--		This program is distributed in the hope that it will be useful,
--		but WITHOUT ANY WARRANTY; without even the implied warranty of
--		MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--		GNU General Public License for more details.
--	  
--		You should have received a copy of the GNU General Public License
--		along with this program.  If not, see <http://www.gnu.org/licenses/>.
--	
--	This software incorporates code originally Copyright (c) Mark Sobkow 2014-2015
--	and licensed under the BSD 3-Clause license as written by xfree86.org:
--	
--	Redistribution and use in source and binary forms, with or without
--	modification, are permitted provided that the following conditions are
--	met:
--	
--	    (1) Redistributions of source code must retain the above copyright
--	    notice, this list of conditions and the following disclaimer. 
--	
--	    (2) Redistributions in binary form must reproduce the above copyright
--	    notice, this list of conditions and the following disclaimer in
--	    the documentation and/or other materials provided with the
--	    distribution.  
--	    
--	    (3)The name of the author may not be used to
--	    endorse or promote products derived from this software without
--	    specific prior written permission.
--	
--	THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
--	IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
--	WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
--	DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
--	INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
--	(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
--	SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
--	HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
--	STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
--	IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
--	POSSIBILITY OF SUCH DAMAGE.
--	
--
-- **********************************************************************
--
--	Code manufactured by MSS Code Factory
--

if exists ( select * from sysobjects where name = 'sp_create_delsubdep3' )
begin
	drop proc sp_create_delsubdep3
end
go

create proc sp_create_delsubdep3
	@argAuditClusterId bigint,
	@argAuditUserId varchar(36),
	@argAuditSessionId varchar(36),
	@secClusterId bigint,
	@secTenantId bigint,@argClassCode MssCFClassCode,
	@argTenantId bigint,
	@argDefSchemaTenantId bigint,
	@argDefSchemaId bigint,
	@argRelationTenantId bigint,
	@argRelationId bigint,
	@argContTenantId bigint,
	@argContDelDep2Id bigint,
	@argName varchar(192)
as
	declare @permissionFlag int
	declare @argId bigint
begin
	if( @argClassCode = 'DEL3' )
	begin
		exec sp_is_tenant_user @permissionFlag output, @argTenantId, 'CreateDelSubDep3', @argAuditUserId
		if( @permissionFlag = 0 )
		begin
			raiserror 17006 "Permission denied -- User not found in tenant TSecGroup for CreateDelSubDep3"
		end
	end

	exec sp_next_scopeidgen @argId output,
		@argTenantId

	insert into cfbam23..scopedef(
			forcesynclock,
			classcode,
			createdby,
			createdat,
			updatedby,
			updatedat,
			tenantid,
			id,
			revision )
	values (
			0,
			@argClassCode,
			@argAuditUserId,
			current_bigdatetime(),
			@argAuditUserId,
			current_bigdatetime(),
			@argTenantId,
			@argId,
			1 )

	insert into cfbam23..del_dep(
			tenantid,
			id,
			defschtentid,
			defschid,
			relationtenantid,
			relationid )
	values (
			@argTenantId,
			@argId,
			@argDefSchemaTenantId,
			@argDefSchemaId,
			@argRelationTenantId,
			@argRelationId )

	insert into cfbam23..delsubdep3(
			tenantid,
			id,
			conttenantid,
			contdeldep2id,
			name )
	values (
			@argTenantId,
			@argId,
			@argContTenantId,
			@argContDelDep2Id,
			@argName )
	if( @argClassCode = 'DEL3' )
	begin
		insert into cfbam23..delsubdep3_h (
			tenantid,
			id,
			classcode,
			auditclusterid,
			auditsessionid,
			auditstamp,
			defschtentid,
			defschid,
			relationtenantid,
			relationid,
			conttenantid,
			contdeldep2id,
			name,
			revision,
			auditaction )
		select
			scop.tenantid,
			scop.id,
			scop.classcode,
			@argAuditClusterId,
			@argAuditSessionId,
			current_bigdatetime(),
			deld.defschtentid,
			deld.defschid,
			deld.relationtenantid,
			deld.relationid,
			del3.conttenantid,
			del3.contdeldep2id,
			del3.name,
			scop.revision,
			1
		from cfbam23..delsubdep3 as del3
			inner join cfbam23..del_dep deld on
				del3.tenantid = deld.tenantid
				and del3.id = deld.id
			inner join cfbam23..scopedef scop on
				deld.tenantid = scop.tenantid
				and deld.id = scop.id
		where
			del3.tenantid = @argTenantId
			and del3.id = @argId
	end
	select
			scop.classcode,
			scop.createdby,
			convert( varchar, scop.createdat, 23 ) as createdat,
			scop.updatedby,
			convert( varchar, scop.updatedat, 23 ) as updatedat,
			scop.tenantid as tenantid,
			scop.id as id,
			deld.defschtentid as defschtentid,
			deld.defschid as defschid,
			deld.relationtenantid as relationtenantid,
			deld.relationid as relationid,
			del3.conttenantid as conttenantid,
			del3.contdeldep2id as contdeldep2id,
			del3.name as name,
			scop.revision as revision
	from cfbam23..delsubdep3 as del3
			inner join cfbam23..del_dep deld on
				del3.tenantid = deld.tenantid
				and del3.id = deld.id
			inner join cfbam23..scopedef scop on
				deld.tenantid = scop.tenantid
				and deld.id = scop.id
	where
			del3.tenantid = @argTenantId
			and del3.id = @argId
end
go
