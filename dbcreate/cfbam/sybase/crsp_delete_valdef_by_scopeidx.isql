--
--	@(#) dbcreate/cfbam/sybase/crsp_delete_valdef_by_scopeidx.isql
--
--	CFBam
--
--	Copyright (c) 2014-2015 Mark Sobkow
--	
--	This program is available as free software under the GNU GPL v3, under
--	the Eclipse Public License 1.0, or under a commercial license from Mark
--	Sobkow.  For commercial licensing details, please contact msobkow@sasktel.net.
--	
--	You should have received copies of the complete license text for
--	GPLv3.txt and EPLv1_0.txt, containing the text
--	of the GNU General Public License v 3.0 and the Eclipse Public License v 1.0.
--	
--	Under the terms of the GPL:
--	
--		This program is free software: you can redistribute it and/or modify
--		it under the terms of the GNU General Public License as published by
--		the Free Software Foundation, either version 3 of the License, or
--		(at your option) any later version.
--	  
--		This program is distributed in the hope that it will be useful,
--		but WITHOUT ANY WARRANTY; without even the implied warranty of
--		MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--		GNU General Public License for more details.
--	  
--		You should have received a copy of the GNU General Public License
--		along with this program.  If not, see <http://www.gnu.org/licenses/>.
--	
--	This software incorporates code originally Copyright (c) Mark Sobkow 2014-2015
--	and licensed under the BSD 3-Clause license as written by xfree86.org:
--	
--	Redistribution and use in source and binary forms, with or without
--	modification, are permitted provided that the following conditions are
--	met:
--	
--	    (1) Redistributions of source code must retain the above copyright
--	    notice, this list of conditions and the following disclaimer. 
--	
--	    (2) Redistributions in binary form must reproduce the above copyright
--	    notice, this list of conditions and the following disclaimer in
--	    the documentation and/or other materials provided with the
--	    distribution.  
--	    
--	    (3)The name of the author may not be used to
--	    endorse or promote products derived from this software without
--	    specific prior written permission.
--	
--	THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
--	IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
--	WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
--	DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
--	INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
--	(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
--	SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
--	HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
--	STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
--	IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
--	POSSIBILITY OF SUCH DAMAGE.
--	
--
-- **********************************************************************
--
--	Code manufactured by MSS Code Factory
--

if exists ( select * from sysobjects where name = 'sp_delete_valdef_by_scopeidx' )
begin
	drop proc sp_delete_valdef_by_scopeidx
end
go

create proc sp_delete_valdef_by_scopeidx(
	@argAuditClusterId bigint,
	@argAuditUserId varchar(36),
	@argAuditSessionId varchar(36),
	@secClusterId bigint,
	@secTenantId bigint,
	@argTenantId bigint,
	@argScopeId bigint )
as
	declare @classCode MssCFClassCode
	declare @varTenantId CFBam23TenantIdGenSeq
	declare @varId CFBam23ValueIdGen
	declare @varRevision int
	declare @retval int
	declare cursNormal insensitive cursor for
		select
			valu.classcode,
			valu.tenantid as tenantid,
			valu.id as id,
			valu.revision as revision
		from cfbam23..valdef as valu
		where
			valu.tenantid = @argTenantId
			and valu.scopeid = @argScopeId
	declare cursRestrict insensitive cursor for
		select
			valu.classcode,
			valu.tenantid as tenantid,
			valu.id as id,
			valu.revision as revision
		from cfbam23..valdef as valu
		where
			valu.tenantid = @argTenantId
			and valu.scopeid = @argScopeId
			and valu.tenantid = @secTenantId
begin
	exec sp_is_system_user @retval output, @argAuditUserId
	if( @retval = 1 )
	begin
		open cursNormal
		fetch cursNormal into
				@classCode,
				@varTenantId,
				@varId,
				@varRevision
		while ( @@sqlstatus = 0 )
		begin
				if( @classCode = 'VALU' ) begin
					exec sp_delete_valdef @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'TBLC' ) begin
					exec sp_delete_tblcol @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'ATOM' ) begin
					exec sp_delete_atomdef @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'BLBD' ) begin
					exec sp_delete_blbdef @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'BLBC' ) begin
					exec sp_delete_blbcol @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'BLBT' ) begin
					exec sp_delete_blbtyp @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'BOLD' ) begin
					exec sp_delete_booldef @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'BOLC' ) begin
					exec sp_delete_boolcol @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'BOLT' ) begin
					exec sp_delete_booltyp @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'I16D' ) begin
					exec sp_delete_int16def @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'I16C' ) begin
					exec sp_delete_int16col @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'I16T' ) begin
					exec sp_delete_int16typ @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'IG16' ) begin
					exec sp_delete_idg16 @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'ENMD' ) begin
					exec sp_delete_enumdef @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'ENMC' ) begin
					exec sp_delete_enumcol @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'ENMT' ) begin
					exec sp_delete_enumtyp @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'I32D' ) begin
					exec sp_delete_int32def @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'I32C' ) begin
					exec sp_delete_int32col @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'I32T' ) begin
					exec sp_delete_int32typ @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'IG32' ) begin
					exec sp_delete_idg32 @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'I64D' ) begin
					exec sp_delete_int64def @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'I64C' ) begin
					exec sp_delete_int64col @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'I64T' ) begin
					exec sp_delete_int64typ @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'IG64' ) begin
					exec sp_delete_idg64 @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'U16D' ) begin
					exec sp_delete_u16def @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'U16C' ) begin
					exec sp_delete_uint16col @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'U16T' ) begin
					exec sp_delete_uint16typ @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'U32D' ) begin
					exec sp_delete_u32def @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'U32C' ) begin
					exec sp_delete_uint32col @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'U32T' ) begin
					exec sp_delete_uint32typ @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'U64D' ) begin
					exec sp_delete_u64def @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'U64C' ) begin
					exec sp_delete_uint64col @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'U64T' ) begin
					exec sp_delete_uint64typ @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'FLTD' ) begin
					exec sp_delete_fltdef @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'FLTC' ) begin
					exec sp_delete_fltcol @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'FLTT' ) begin
					exec sp_delete_flttyp @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'DBLD' ) begin
					exec sp_delete_dbldef @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'DBLC' ) begin
					exec sp_delete_dblcol @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'DBLT' ) begin
					exec sp_delete_dbltyp @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'NUMD' ) begin
					exec sp_delete_numdef @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'NUMC' ) begin
					exec sp_delete_numcol @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'NUMT' ) begin
					exec sp_delete_numtyp @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'STRD' ) begin
					exec sp_delete_strdef @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'STRC' ) begin
					exec sp_delete_strcol @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'STRT' ) begin
					exec sp_delete_strtyp @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'TXTD' ) begin
					exec sp_delete_txtdef @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'TXTC' ) begin
					exec sp_delete_txtcol @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'TXTT' ) begin
					exec sp_delete_txttyp @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'NTKD' ) begin
					exec sp_delete_nmtkndef @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'NTKC' ) begin
					exec sp_delete_nmtkncol @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'NTKT' ) begin
					exec sp_delete_nmtkntyp @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'NTSD' ) begin
					exec sp_delete_nmtknsdef @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'NTSC' ) begin
					exec sp_delete_nmtknscol @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'NTST' ) begin
					exec sp_delete_nmtknstyp @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'TKND' ) begin
					exec sp_delete_tkndef @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'TKNC' ) begin
					exec sp_delete_tkncol @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'TKNT' ) begin
					exec sp_delete_tkntyp @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'DATD' ) begin
					exec sp_delete_dtdef @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'DATC' ) begin
					exec sp_delete_dtcol @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'DATT' ) begin
					exec sp_delete_dttyp @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'TIMD' ) begin
					exec sp_delete_tmdef @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'TIMC' ) begin
					exec sp_delete_tmcol @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'TIMT' ) begin
					exec sp_delete_tmtyp @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'TSPD' ) begin
					exec sp_delete_tsdef @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'TSPC' ) begin
					exec sp_delete_tscol @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'TSPT' ) begin
					exec sp_delete_tstyp @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'DAZD' ) begin
					exec sp_delete_dzdef @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'DAZC' ) begin
					exec sp_delete_dzcol @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'DAZT' ) begin
					exec sp_delete_dztyp @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'TMZD' ) begin
					exec sp_delete_tmzdef @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'TMZC' ) begin
					exec sp_delete_tmzcol @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'TMZT' ) begin
					exec sp_delete_tmztyp @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'ZSTD' ) begin
					exec sp_delete_zsdef @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'ZSTC' ) begin
					exec sp_delete_zscol @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'ZSTT' ) begin
					exec sp_delete_zstyp @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'UIDD' ) begin
					exec sp_delete_uuiddef @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'UIDC' ) begin
					exec sp_delete_uuidcol @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'UIDT' ) begin
					exec sp_delete_uuidtyp @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'IGUU' ) begin
					exec sp_delete_idguuid @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else begin
					raiserror 17005 'sp_delete_valdef_by_scopeidx() Unrecognized classcode value'
				end
			fetch cursNormal into
				@classCode,
				@varTenantId,
				@varId,
				@varRevision
		end
		close cursNormal
	end
	else begin
		open cursRestrict
		fetch cursRestrict into
				@classCode,
				@varTenantId,
				@varId,
				@varRevision
		while ( @@sqlstatus = 0 )
		begin
				if( @classCode = 'VALU' ) begin
					exec sp_delete_valdef @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'TBLC' ) begin
					exec sp_delete_tblcol @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'ATOM' ) begin
					exec sp_delete_atomdef @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'BLBD' ) begin
					exec sp_delete_blbdef @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'BLBC' ) begin
					exec sp_delete_blbcol @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'BLBT' ) begin
					exec sp_delete_blbtyp @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'BOLD' ) begin
					exec sp_delete_booldef @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'BOLC' ) begin
					exec sp_delete_boolcol @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'BOLT' ) begin
					exec sp_delete_booltyp @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'I16D' ) begin
					exec sp_delete_int16def @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'I16C' ) begin
					exec sp_delete_int16col @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'I16T' ) begin
					exec sp_delete_int16typ @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'IG16' ) begin
					exec sp_delete_idg16 @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'ENMD' ) begin
					exec sp_delete_enumdef @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'ENMC' ) begin
					exec sp_delete_enumcol @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'ENMT' ) begin
					exec sp_delete_enumtyp @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'I32D' ) begin
					exec sp_delete_int32def @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'I32C' ) begin
					exec sp_delete_int32col @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'I32T' ) begin
					exec sp_delete_int32typ @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'IG32' ) begin
					exec sp_delete_idg32 @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'I64D' ) begin
					exec sp_delete_int64def @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'I64C' ) begin
					exec sp_delete_int64col @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'I64T' ) begin
					exec sp_delete_int64typ @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'IG64' ) begin
					exec sp_delete_idg64 @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'U16D' ) begin
					exec sp_delete_u16def @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'U16C' ) begin
					exec sp_delete_uint16col @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'U16T' ) begin
					exec sp_delete_uint16typ @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'U32D' ) begin
					exec sp_delete_u32def @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'U32C' ) begin
					exec sp_delete_uint32col @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'U32T' ) begin
					exec sp_delete_uint32typ @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'U64D' ) begin
					exec sp_delete_u64def @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'U64C' ) begin
					exec sp_delete_uint64col @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'U64T' ) begin
					exec sp_delete_uint64typ @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'FLTD' ) begin
					exec sp_delete_fltdef @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'FLTC' ) begin
					exec sp_delete_fltcol @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'FLTT' ) begin
					exec sp_delete_flttyp @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'DBLD' ) begin
					exec sp_delete_dbldef @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'DBLC' ) begin
					exec sp_delete_dblcol @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'DBLT' ) begin
					exec sp_delete_dbltyp @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'NUMD' ) begin
					exec sp_delete_numdef @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'NUMC' ) begin
					exec sp_delete_numcol @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'NUMT' ) begin
					exec sp_delete_numtyp @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'STRD' ) begin
					exec sp_delete_strdef @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'STRC' ) begin
					exec sp_delete_strcol @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'STRT' ) begin
					exec sp_delete_strtyp @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'TXTD' ) begin
					exec sp_delete_txtdef @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'TXTC' ) begin
					exec sp_delete_txtcol @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'TXTT' ) begin
					exec sp_delete_txttyp @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'NTKD' ) begin
					exec sp_delete_nmtkndef @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'NTKC' ) begin
					exec sp_delete_nmtkncol @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'NTKT' ) begin
					exec sp_delete_nmtkntyp @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'NTSD' ) begin
					exec sp_delete_nmtknsdef @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'NTSC' ) begin
					exec sp_delete_nmtknscol @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'NTST' ) begin
					exec sp_delete_nmtknstyp @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'TKND' ) begin
					exec sp_delete_tkndef @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'TKNC' ) begin
					exec sp_delete_tkncol @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'TKNT' ) begin
					exec sp_delete_tkntyp @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'DATD' ) begin
					exec sp_delete_dtdef @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'DATC' ) begin
					exec sp_delete_dtcol @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'DATT' ) begin
					exec sp_delete_dttyp @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'TIMD' ) begin
					exec sp_delete_tmdef @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'TIMC' ) begin
					exec sp_delete_tmcol @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'TIMT' ) begin
					exec sp_delete_tmtyp @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'TSPD' ) begin
					exec sp_delete_tsdef @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'TSPC' ) begin
					exec sp_delete_tscol @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'TSPT' ) begin
					exec sp_delete_tstyp @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'DAZD' ) begin
					exec sp_delete_dzdef @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'DAZC' ) begin
					exec sp_delete_dzcol @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'DAZT' ) begin
					exec sp_delete_dztyp @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'TMZD' ) begin
					exec sp_delete_tmzdef @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'TMZC' ) begin
					exec sp_delete_tmzcol @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'TMZT' ) begin
					exec sp_delete_tmztyp @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'ZSTD' ) begin
					exec sp_delete_zsdef @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'ZSTC' ) begin
					exec sp_delete_zscol @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'ZSTT' ) begin
					exec sp_delete_zstyp @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'UIDD' ) begin
					exec sp_delete_uuiddef @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'UIDC' ) begin
					exec sp_delete_uuidcol @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'UIDT' ) begin
					exec sp_delete_uuidtyp @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else if( @classCode = 'IGUU' ) begin
					exec sp_delete_idguuid @argAuditClusterId,
							@argAuditUserId,
							@argAuditSessionId,
							@secClusterId,
							@secTenantId,
						@varTenantId,
						@varId,
							@varRevision
				end
				else begin
					raiserror 17005 'sp_delete_valdef_by_scopeidx() Unrecognized classcode value'
				end
			fetch cursRestrict into
				@classCode,
				@varTenantId,
				@varId,
				@varRevision
		end
		close cursRestrict
	end
end
go
