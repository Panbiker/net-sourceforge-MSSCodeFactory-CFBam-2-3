--
--	@(#) dbcreate/cfbam/sybase/crsp_update_srvprm.isql
--
--	CFBam
--
--	Copyright (c) 2014-2015 Mark Sobkow
--	
--	This program is available as free software under the GNU GPL v3, under
--	the Eclipse Public License 1.0, or under a commercial license from Mark
--	Sobkow.  For commercial licensing details, please contact msobkow@sasktel.net.
--	
--	You should have received copies of the complete license text for
--	GPLv3.txt and EPLv1_0.txt, containing the text
--	of the GNU General Public License v 3.0 and the Eclipse Public License v 1.0.
--	
--	Under the terms of the GPL:
--	
--		This program is free software: you can redistribute it and/or modify
--		it under the terms of the GNU General Public License as published by
--		the Free Software Foundation, either version 3 of the License, or
--		(at your option) any later version.
--	  
--		This program is distributed in the hope that it will be useful,
--		but WITHOUT ANY WARRANTY; without even the implied warranty of
--		MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--		GNU General Public License for more details.
--	  
--		You should have received a copy of the GNU General Public License
--		along with this program.  If not, see <http://www.gnu.org/licenses/>.
--	
--	This software incorporates code originally Copyright (c) Mark Sobkow 2014-2015
--	and licensed under the BSD 3-Clause license as written by xfree86.org:
--	
--	Redistribution and use in source and binary forms, with or without
--	modification, are permitted provided that the following conditions are
--	met:
--	
--	    (1) Redistributions of source code must retain the above copyright
--	    notice, this list of conditions and the following disclaimer. 
--	
--	    (2) Redistributions in binary form must reproduce the above copyright
--	    notice, this list of conditions and the following disclaimer in
--	    the documentation and/or other materials provided with the
--	    distribution.  
--	    
--	    (3)The name of the author may not be used to
--	    endorse or promote products derived from this software without
--	    specific prior written permission.
--	
--	THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
--	IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
--	WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
--	DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
--	INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
--	(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
--	SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
--	HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
--	STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
--	IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
--	POSSIBILITY OF SUCH DAMAGE.
--	
--
-- **********************************************************************
--
--	Code manufactured by MSS Code Factory
--


if exists ( select * from sysobjects where name = 'sp_update_srvprm' )
begin
	drop proc sp_update_srvprm
end
go

create proc sp_update_srvprm
	@argAuditClusterId bigint,
	@argAuditUserId varchar(36),
	@argAuditSessionId varchar(36),
	@secClusterId bigint,
	@secTenantId bigint,
	@argClassCode MssCFClassCode,
	@argTenantId bigint,
	@argServerMethodId bigint,
	@argId bigint,
	@argDefSchemaTenantId bigint,
	@argDefSchemaId bigint,
	@argName varchar(192),
	@argShortDescription varchar(128),
	@argDescription varchar(1023),
	@argIsNullable char(1),
	@argTypeTenantId bigint,
	@argTypeId bigint,
	@argPrevTenantId bigint,
	@argPrevId bigint,
	@argNextTenantId bigint,
	@argNextId bigint,
	@argRevision integer
as
	declare @oldRevision int
	declare @rc int
	declare @oldTenantId bigint
	declare @oldServerMethodId bigint
	declare @oldId bigint
	declare @oldDefSchemaTenantId bigint
	declare @oldDefSchemaId bigint
	declare @oldName varchar(192)
	declare @oldShortDescription varchar(128)
	declare @oldDescription varchar(1023)
	declare @oldIsNullable char(1)
	declare @oldTypeTenantId bigint
	declare @oldTypeId bigint
	declare @oldPrevTenantId bigint
	declare @oldPrevId bigint
	declare @oldNextTenantId bigint
	declare @oldNextId bigint
	declare @oldAuditCreatedAt bigdatetime
	declare @oldAuditCreatedBy varchar(36)
	declare @oldAuditUpdatedAt bigdatetime
	declare @oldAuditUpdatedBy varchar(36)
	declare @permissionFlag int
begin

	if( @argClassCode = 'SPRM' )
	begin
		exec sp_is_tenant_user @permissionFlag output, @argTenantId, 'UpdateParam', @argAuditUserId
		if( @permissionFlag = 0 )
		begin
			raiserror 17007 "Permission denied -- User not found in tenant TSecGroup for UpdateParam"
		end
	end

	update cfbam23..srvprm
	set forcesynclock = forcesynclock + 1
	where
			tenantid = @argTenantId
		and id = @argId
	select @rc = @@rowcount
	if @rc != 1
	begin
		raiserror 17004 "Data collision detected -- primary key does not exist"
	end

	select
		@oldAuditCreatedAt = sprm.createdat,
		@oldAuditCreatedBy = sprm.createdby,
		@oldAuditUpdatedAt = sprm.updatedat,
		@oldAuditUpdatedBy = sprm.updatedby,
		@oldTenantId = sprm.tenantid,
		@oldServerMethodId = sprm.srvmeth_id,
		@oldId = sprm.id,
		@oldDefSchemaTenantId = sprm.defschtentid,
		@oldDefSchemaId = sprm.defschid,
		@oldName = sprm.name,
		@oldShortDescription = sprm.short_descr,
		@oldDescription = sprm.descr,
		@oldIsNullable = sprm.isnullable,
		@oldTypeTenantId = sprm.tptentid,
		@oldTypeId = sprm.tpid,
		@oldPrevTenantId = sprm.prevtenantid,
		@oldPrevId = sprm.previd,
		@oldNextTenantId = sprm.nexttenantid,
		@oldNextId = sprm.nextid,
		@oldRevision = sprm.revision
	from cfbam23..srvprm as sprm
	where
			sprm.tenantid = @argTenantId
			and sprm.id = @argId

	if @argRevision != @oldRevision
	begin
		raiserror 17002 "sp_update_srvprm() Data collision detected"
	end

	if( @argClassCode = 'SPRM' )
	begin
		if( @argTenantId != @oldTenantId )
		begin
			raiserror 17009 "Permission denied -- TenantId cannot be updated for Param"
		end
	end

	update cfbam23..srvprm
	set
		revision = @argRevision + 1,
		srvmeth_id = @argServerMethodId,
		defschtentid = @argDefSchemaTenantId,
		defschid = @argDefSchemaId,
		name = @argName,
		short_descr = @argShortDescription,
		descr = @argDescription,
		isnullable = @argIsNullable,
		tptentid = @argTypeTenantId,
		tpid = @argTypeId,
		prevtenantid = @argPrevTenantId,
		previd = @argPrevId,
		nexttenantid = @argNextTenantId,
		nextid = @argNextId
	where
		tenantid = @argTenantId
		and id = @argId
		and revision = @argRevision

	select @rc = @@rowcount

	if @rc != 1
	begin
		raiserror 17003 "sp_update_srvprm() Data collision detected"
	end

	insert into cfbam23..srvprm_h (
			tenantid,
			id,
			auditclusterid,
			auditsessionid,
			auditstamp,
			srvmeth_id,
			defschtentid,
			defschid,
			name,
			short_descr,
			descr,
			isnullable,
			tptentid,
			tpid,
			prevtenantid,
			previd,
			nexttenantid,
			nextid,
			revision,
			auditaction )
		select
			sprm.tenantid,
			sprm.id,
			@argAuditClusterId,
			@argAuditSessionId,
			current_bigdatetime(),
			sprm.srvmeth_id,
			sprm.defschtentid,
			sprm.defschid,
			sprm.name,
			sprm.short_descr,
			sprm.descr,
			sprm.isnullable,
			sprm.tptentid,
			sprm.tpid,
			sprm.prevtenantid,
			sprm.previd,
			sprm.nexttenantid,
			sprm.nextid,
			sprm.revision,
			2
		from cfbam23..srvprm as sprm
		where
			sprm.tenantid = @argTenantId
			and sprm.id = @argId

	select
			sprm.createdby,
			convert( varchar, sprm.createdat, 23 ) as createdat,
			sprm.updatedby,
			convert( varchar, sprm.updatedat, 23 ) as updatedat,
			sprm.tenantid as tenantid,
			sprm.srvmeth_id as srvmeth_id,
			sprm.id as id,
			sprm.defschtentid as defschtentid,
			sprm.defschid as defschid,
			sprm.name as name,
			sprm.short_descr as short_descr,
			sprm.descr as descr,
			sprm.isnullable as isnullable,
			sprm.tptentid as tptentid,
			sprm.tpid as tpid,
			sprm.prevtenantid as prevtenantid,
			sprm.previd as previd,
			sprm.nexttenantid as nexttenantid,
			sprm.nextid as nextid,
		sprm.revision as revision
	from cfbam23..srvprm as sprm
	where
		sprm.tenantid = @argTenantId
			and sprm.id = @argId
end
go

