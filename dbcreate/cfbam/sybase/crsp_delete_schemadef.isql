--
--	@(#) dbcreate/cfbam/sybase/crsp_delete_schemadef.isql
--
--	CFBam
--
--	Copyright (c) 2014-2015 Mark Sobkow
--	
--	This program is available as free software under the GNU GPL v3, under
--	the Eclipse Public License 1.0, or under a commercial license from Mark
--	Sobkow.  For commercial licensing details, please contact msobkow@sasktel.net.
--	
--	You should have received copies of the complete license text for
--	GPLv3.txt and EPLv1_0.txt, containing the text
--	of the GNU General Public License v 3.0 and the Eclipse Public License v 1.0.
--	
--	Under the terms of the GPL:
--	
--		This program is free software: you can redistribute it and/or modify
--		it under the terms of the GNU General Public License as published by
--		the Free Software Foundation, either version 3 of the License, or
--		(at your option) any later version.
--	  
--		This program is distributed in the hope that it will be useful,
--		but WITHOUT ANY WARRANTY; without even the implied warranty of
--		MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--		GNU General Public License for more details.
--	  
--		You should have received a copy of the GNU General Public License
--		along with this program.  If not, see <http://www.gnu.org/licenses/>.
--	
--	This software incorporates code originally Copyright (c) Mark Sobkow 2014-2015
--	and licensed under the BSD 3-Clause license as written by xfree86.org:
--	
--	Redistribution and use in source and binary forms, with or without
--	modification, are permitted provided that the following conditions are
--	met:
--	
--	    (1) Redistributions of source code must retain the above copyright
--	    notice, this list of conditions and the following disclaimer. 
--	
--	    (2) Redistributions in binary form must reproduce the above copyright
--	    notice, this list of conditions and the following disclaimer in
--	    the documentation and/or other materials provided with the
--	    distribution.  
--	    
--	    (3)The name of the author may not be used to
--	    endorse or promote products derived from this software without
--	    specific prior written permission.
--	
--	THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
--	IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
--	WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
--	DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
--	INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
--	(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
--	SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
--	HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
--	STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
--	IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
--	POSSIBILITY OF SUCH DAMAGE.
--	
--
-- **********************************************************************
--
--	Code manufactured by MSS Code Factory
--

if exists ( select * from sysobjects where name = 'sp_delete_schemadef' )
begin
	drop proc sp_delete_schemadef
end
go

create proc sp_delete_schemadef
	@argAuditClusterId bigint,
	@argAuditUserId varchar(36),
	@argAuditSessionId varchar(36),
	@secClusterId bigint,
	@secTenantId bigint,
	@argTenantId bigint,
	@argId bigint,
	@argRevision int
as	declare @oldRevision int
	declare @rc int
	declare @oldClassCode MssCFClassCode
	declare @oldTenantId bigint
	declare @oldId bigint
	declare @oldDomainId bigint
	declare @oldName varchar(192)
	declare @oldDbName varchar(12)
	declare @oldShortName varchar(16)
	declare @oldLabel varchar(64)
	declare @oldShortDescription varchar(128)
	declare @oldDescription varchar(1023)
	declare @oldDefaultLicenseTenantId bigint
	declare @oldDefaultLicenseId bigint
	declare @oldExtendCFCore char(1)
	declare @oldDataScopeId smallint
	declare @oldViewAccessSecurityId smallint
	declare @oldEditAccessSecurityId smallint
	declare @oldViewAccessFrequencyId smallint
	declare @oldEditAccessFrequencyId smallint
	declare @oldCopyrightPeriod varchar(10)
	declare @oldCopyrightHolder varchar(511)
	declare @oldPublishURI varchar(512)
	declare @oldJSchemaObjImport text
	declare @oldJSchemaObjInterface text
	declare @oldJSchemaObjMembers text
	declare @oldJSchemaObjImplementation text
	declare @oldJDb2LUWSchemaObjMembers text
	declare @oldJDb2LUWSchemaObjImpl text
	declare @oldJDb2LUWSchemaObjImport text
	declare @oldJMSSqlSchemaObjMembers text
	declare @oldJMSSqlSchemaObjImpl text
	declare @oldJMSSqlSchemaObjImport text
	declare @oldJMySqlSchemaObjMembers text
	declare @oldJMySqlSchemaObjImpl text
	declare @oldJMySqlSchemaObjImport text
	declare @oldJOracleSchemaObjMembers text
	declare @oldJOracleSchemaObjImpl text
	declare @oldJOracleSchemaObjImport text
	declare @oldJPgSqlSchemaObjMembers text
	declare @oldJPgSqlSchemaObjImpl text
	declare @oldJPgSqlSchemaObjImport text
	declare @oldJSybaseSchemaObjMembers text
	declare @oldJSybaseSchemaObjImpl text
	declare @oldJSybaseSchemaObjImport text
	declare @oldJRamSchemaObjMembers text
	declare @oldJRamSchemaObjImpl text
	declare @oldJRamSchemaObjImport text
	declare @oldJXMsgSchemaImport text
	declare @oldJXMsgSchemaFormatters text
	declare @oldJXMsgClientSchemaImport text
	declare @oldJXMsgClientSchemaBody text
	declare @oldJXMsgRqstSchemaBody text
	declare @oldJXMsgRqstSchemaImport text
	declare @oldJXMsgRqstSchemaWireParsers text
	declare @oldJXMsgRqstSchemaXsdSpec text
	declare @oldJXMsgRqstSchemaXsdElementList text
	declare @oldJXMsgRspnSchemaBody text
	declare @oldJXMsgRspnSchemaImport text
	declare @oldJXMsgRspnSchemaWireParsers text
	declare @oldJXMsgRspnSchemaXsdElementList text
	declare @oldJXMsgRspnSchemaXsdSpec text
	declare @oldAuditCreatedAt bigdatetime
	declare @oldAuditCreatedBy varchar(36)
	declare @oldAuditUpdatedAt bigdatetime
	declare @oldAuditUpdatedBy varchar(36)
	declare @permissionFlag int
	declare @cleartablerelationnarrowedTenantId bigint
	declare @cleartablerelationnarrowedId bigint
	declare @deltablechainTenantId bigint
	declare @deltablechainId bigint
	declare @deltablerelationcolTenantId bigint
	declare @deltablerelationcolId bigint
	declare @deltablerelationTenantId bigint
	declare @deltablerelationId bigint
	declare @deltableTenantId bigint
	declare @deltableId bigint
	declare @deltypedefTenantId bigint
	declare @deltypedefId bigint
begin
	update cfbam23..scopedef
	set forcesynclock = forcesynclock + 1
	where
			tenantid = @argTenantId
		and id = @argId
	select @rc = @@rowcount
	if @rc != 1
	begin
		raiserror 17004 "Data collision detected -- primary key does not exist"
	end

	select
		@oldClassCode = scop.classcode,
		@oldAuditCreatedAt = scop.createdat,
		@oldAuditCreatedBy = scop.createdby,
		@oldAuditUpdatedAt = scop.updatedat,
		@oldAuditUpdatedBy = scop.updatedby,
		@oldTenantId = scop.tenantid,
		@oldId = scop.id,
		@oldDomainId = schm.domainid,
		@oldName = schm.name,
		@oldDbName = schm.dbname,
		@oldShortName = schm.short_name,
		@oldLabel = schm.label,
		@oldShortDescription = schm.short_descr,
		@oldDescription = schm.descr,
		@oldDefaultLicenseTenantId = schm.defaultlicensetenantid,
		@oldDefaultLicenseId = schm.deflcnid,
		@oldExtendCFCore = schm.extendcfcore,
		@oldDataScopeId = schm.datascopeid,
		@oldViewAccessSecurityId = schm.vaccsecid,
		@oldEditAccessSecurityId = schm.eaccsecid,
		@oldViewAccessFrequencyId = schm.vaccfreqid,
		@oldEditAccessFrequencyId = schm.eaccfreqid,
		@oldCopyrightPeriod = schm.copyperd,
		@oldCopyrightHolder = schm.copyhold,
		@oldPublishURI = schm.puburi,
		@oldJSchemaObjImport = schm.jobj_import,
		@oldJSchemaObjInterface = schm.jobj_xface,
		@oldJSchemaObjMembers = schm.jobj_memb,
		@oldJSchemaObjImplementation = schm.jobj_impl,
		@oldJDb2LUWSchemaObjMembers = schm.jdb2_memb,
		@oldJDb2LUWSchemaObjImpl = schm.jdb2_impl,
		@oldJDb2LUWSchemaObjImport = schm.jdb2_import,
		@oldJMSSqlSchemaObjMembers = schm.jmssql_memb,
		@oldJMSSqlSchemaObjImpl = schm.jmssql_impl,
		@oldJMSSqlSchemaObjImport = schm.jmssql_import,
		@oldJMySqlSchemaObjMembers = schm.jmysql_memb,
		@oldJMySqlSchemaObjImpl = schm.jmysql_impl,
		@oldJMySqlSchemaObjImport = schm.jmysql_import,
		@oldJOracleSchemaObjMembers = schm.joracle_memb,
		@oldJOracleSchemaObjImpl = schm.joracle_impl,
		@oldJOracleSchemaObjImport = schm.joracle_import,
		@oldJPgSqlSchemaObjMembers = schm.jpgsql_memb,
		@oldJPgSqlSchemaObjImpl = schm.jpgsql_impl,
		@oldJPgSqlSchemaObjImport = schm.jpgsql_import,
		@oldJSybaseSchemaObjMembers = schm.jsybase_memb,
		@oldJSybaseSchemaObjImpl = schm.jsybase_impl,
		@oldJSybaseSchemaObjImport = schm.jsybase_import,
		@oldJRamSchemaObjMembers = schm.jram_memb,
		@oldJRamSchemaObjImpl = schm.jram_impl,
		@oldJRamSchemaObjImport = schm.jram_impl,
		@oldJXMsgSchemaImport = schm.javaxmsgschimp,
		@oldJXMsgSchemaFormatters = schm.javaxmsgschfmts,
		@oldJXMsgClientSchemaImport = schm.javaxmsgcltschimp,
		@oldJXMsgClientSchemaBody = schm.javaxmsgcltschbdy,
		@oldJXMsgRqstSchemaBody = schm.javaxmsgrqstschbdy,
		@oldJXMsgRqstSchemaImport = schm.javaxmsgrqstschimp,
		@oldJXMsgRqstSchemaWireParsers = schm.javaxmsgrqstschwirep,
		@oldJXMsgRqstSchemaXsdSpec = schm.javaxmsgrqstschxsdspec,
		@oldJXMsgRqstSchemaXsdElementList = schm.javaxmsgrqstschxsdeltlst,
		@oldJXMsgRspnSchemaBody = schm.javaxmsgrspnschemabody,
		@oldJXMsgRspnSchemaImport = schm.javaxmsgrspnschimp,
		@oldJXMsgRspnSchemaWireParsers = schm.javaxmsgrspnschwirep,
		@oldJXMsgRspnSchemaXsdElementList = schm.javaxmsgrspnschxsdeltlst,
		@oldJXMsgRspnSchemaXsdSpec = schm.javaxmsgrspnschxsdspec,
		@oldRevision = scop.revision
	from cfbam23..schemadef as schm
			inner join cfbam23..scopedef scop on
				schm.tenantid = scop.tenantid
				and schm.id = scop.id
	where
			scop.tenantid = @argTenantId
			and scop.id = @argId
	if @argRevision != @oldRevision
	begin
		raiserror 17000 "sp_delete_schemadef() Data collision detected"
	end

	exec sp_is_tenant_user @permissionFlag output, @secTenantId, 'DeleteSchemaDef', @argAuditUserId
	if( @permissionFlag = 0 )
	begin
		raiserror 17008 "Permission denied -- User not found in tenant TSecGroup for DeleteSchemaDef"
	end

	if( @oldClassCode = 'SCHM' )
	begin
		insert into cfbam23..schemadef_h (
			tenantid,
			id,
			classcode,
			auditclusterid,
			auditsessionid,
			auditstamp,
			domainid,
			name,
			dbname,
			short_name,
			label,
			short_descr,
			descr,
			defaultlicensetenantid,
			deflcnid,
			extendcfcore,
			datascopeid,
			vaccsecid,
			eaccsecid,
			vaccfreqid,
			eaccfreqid,
			copyperd,
			copyhold,
			puburi,
			jobj_import,
			jobj_xface,
			jobj_memb,
			jobj_impl,
			jdb2_memb,
			jdb2_impl,
			jdb2_import,
			jmssql_memb,
			jmssql_impl,
			jmssql_import,
			jmysql_memb,
			jmysql_impl,
			jmysql_import,
			joracle_memb,
			joracle_impl,
			joracle_import,
			jpgsql_memb,
			jpgsql_impl,
			jpgsql_import,
			jsybase_memb,
			jsybase_impl,
			jsybase_import,
			jram_memb,
			jram_impl,
			jram_impl,
			javaxmsgschimp,
			javaxmsgschfmts,
			javaxmsgcltschimp,
			javaxmsgcltschbdy,
			javaxmsgrqstschbdy,
			javaxmsgrqstschimp,
			javaxmsgrqstschwirep,
			javaxmsgrqstschxsdspec,
			javaxmsgrqstschxsdeltlst,
			javaxmsgrspnschemabody,
			javaxmsgrspnschimp,
			javaxmsgrspnschwirep,
			javaxmsgrspnschxsdeltlst,
			javaxmsgrspnschxsdspec,
			revision,
			auditaction )
		select
			scop.tenantid,
			scop.id,
			scop.classcode,
			@argAuditClusterId,
			@argAuditSessionId,
			current_bigdatetime(),
			schm.domainid,
			schm.name,
			schm.dbname,
			schm.short_name,
			schm.label,
			schm.short_descr,
			schm.descr,
			schm.defaultlicensetenantid,
			schm.deflcnid,
			schm.extendcfcore,
			schm.datascopeid,
			schm.vaccsecid,
			schm.eaccsecid,
			schm.vaccfreqid,
			schm.eaccfreqid,
			schm.copyperd,
			schm.copyhold,
			schm.puburi,
			schm.jobj_import,
			schm.jobj_xface,
			schm.jobj_memb,
			schm.jobj_impl,
			schm.jdb2_memb,
			schm.jdb2_impl,
			schm.jdb2_import,
			schm.jmssql_memb,
			schm.jmssql_impl,
			schm.jmssql_import,
			schm.jmysql_memb,
			schm.jmysql_impl,
			schm.jmysql_import,
			schm.joracle_memb,
			schm.joracle_impl,
			schm.joracle_import,
			schm.jpgsql_memb,
			schm.jpgsql_impl,
			schm.jpgsql_import,
			schm.jsybase_memb,
			schm.jsybase_impl,
			schm.jsybase_import,
			schm.jram_memb,
			schm.jram_impl,
			schm.jram_impl,
			schm.javaxmsgschimp,
			schm.javaxmsgschfmts,
			schm.javaxmsgcltschimp,
			schm.javaxmsgcltschbdy,
			schm.javaxmsgrqstschbdy,
			schm.javaxmsgrqstschimp,
			schm.javaxmsgrqstschwirep,
			schm.javaxmsgrqstschxsdspec,
			schm.javaxmsgrqstschxsdeltlst,
			schm.javaxmsgrspnschemabody,
			schm.javaxmsgrspnschimp,
			schm.javaxmsgrspnschwirep,
			schm.javaxmsgrspnschxsdeltlst,
			schm.javaxmsgrspnschxsdspec,
			@argRevision + 1,
			3
		from cfbam23..schemadef as schm
			inner join cfbam23..scopedef scop on
				schm.tenantid = scop.tenantid
				and schm.id = scop.id
		where
			schm.tenantid = @argTenantId
			and schm.id = @argId
	end

	declare cursClearTableRelationNarrowed insensitive cursor for
		select
			reld.tenantid as tenantid,
			reld.id as id
		from cfbam23..schemadef as schm
			inner join cfbam23..tbldef tbld on
				schm.tenantid = tbld.tenantid
				and schm.id = tbld.schemadefid
			inner join cfbam23..reldef reld on
				tbld.tenantid = reld.tenantid
				and tbld.id = reld.tableid
		where
			schm.tenantid = @argTenantId
			and schm.id = @argId

	open cursClearTableRelationNarrowed
	fetch cursClearTableRelationNarrowed into
			@cleartablerelationnarrowedTenantId,
			@cleartablerelationnarrowedId
	while ( @@sqlstatus = 0 )
	begin
		update cfbam23..reldef
		set
			narrowedtenantid = null,
			narrowedid = null
		where
			tenantid = @cleartablerelationnarrowedTenantId
			and id = @cleartablerelationnarrowedId
		fetch cursClearTableRelationNarrowed into
			@cleartablerelationnarrowedTenantId,
			@cleartablerelationnarrowedId
	end
	close cursClearTableRelationNarrowed


	declare cursDelTableChain insensitive cursor for
		select
			chn.tenantid,
			chn.id
		from cfbam23..schemadef as schm
			inner join cfbam23..tbldef tbld on
				schm.tenantid = tbld.tenantid
				and schm.id = tbld.schemadefid
			inner join cfbam23..chain_def chn on
				tbld.tenantid = chn.tenantid
				and tbld.id = chn.tableid
		where
			schm.tenantid = @argTenantId
			and schm.id = @argId


	open cursDelTableChain
	fetch cursDelTableChain into
			@deltablechainTenantId,
			@deltablechainId
	while ( @@sqlstatus = 0 )
	begin
		exec sp_delete_chain_def_by_ididx @argAuditClusterId,
			@argAuditUserId,
			@argAuditSessionId,
			@secClusterId,
			@secTenantId,
			@deltablechainTenantId,
			@deltablechainId
		fetch cursDelTableChain into
			@deltablechainTenantId,
			@deltablechainId
	end
	close cursDelTableChain


	declare cursDelTableRelationCol insensitive cursor for
		select
			relc.tenantid,
			relc.id
		from cfbam23..schemadef as schm
			inner join cfbam23..tbldef tbld on
				schm.tenantid = tbld.tenantid
				and schm.id = tbld.schemadefid
			inner join cfbam23..reldef reld on
				tbld.tenantid = reld.tenantid
				and tbld.id = reld.tableid
			inner join cfbam23..relcol relc on
				reld.tenantid = relc.tenantid
				and reld.id = relc.relationid
		where
			schm.tenantid = @argTenantId
			and schm.id = @argId


	open cursDelTableRelationCol
	fetch cursDelTableRelationCol into
			@deltablerelationcolTenantId,
			@deltablerelationcolId
	while ( @@sqlstatus = 0 )
	begin
		exec sp_delete_relcol_by_ididx @argAuditClusterId,
			@argAuditUserId,
			@argAuditSessionId,
			@secClusterId,
			@secTenantId,
			@deltablerelationcolTenantId,
			@deltablerelationcolId
		fetch cursDelTableRelationCol into
			@deltablerelationcolTenantId,
			@deltablerelationcolId
	end
	close cursDelTableRelationCol


	declare cursDelTableRelation insensitive cursor for
		select
			reld.tenantid,
			reld.id
		from cfbam23..schemadef as schm
			inner join cfbam23..tbldef tbld on
				schm.tenantid = tbld.tenantid
				and schm.id = tbld.schemadefid
			inner join cfbam23..reldef reld on
				tbld.tenantid = reld.tenantid
				and tbld.id = reld.tableid
		where
			schm.tenantid = @argTenantId
			and schm.id = @argId


	open cursDelTableRelation
	fetch cursDelTableRelation into
			@deltablerelationTenantId,
			@deltablerelationId
	while ( @@sqlstatus = 0 )
	begin
		exec sp_delete_reldef_by_ididx @argAuditClusterId,
			@argAuditUserId,
			@argAuditSessionId,
			@secClusterId,
			@secTenantId,
			@deltablerelationTenantId,
			@deltablerelationId
		fetch cursDelTableRelation into
			@deltablerelationTenantId,
			@deltablerelationId
	end
	close cursDelTableRelation


	declare cursDelTable insensitive cursor for
		select
			tbld.tenantid,
			tbld.id
		from cfbam23..schemadef as schm
			inner join cfbam23..tbldef tbld on
				schm.tenantid = tbld.tenantid
				and schm.id = tbld.schemadefid
		where
			schm.tenantid = @argTenantId
			and schm.id = @argId


	open cursDelTable
	fetch cursDelTable into
			@deltableTenantId,
			@deltableId
	while ( @@sqlstatus = 0 )
	begin
		exec sp_delete_tbldef_by_ididx @argAuditClusterId,
			@argAuditUserId,
			@argAuditSessionId,
			@secClusterId,
			@secTenantId,
			@deltableTenantId,
			@deltableId
		fetch cursDelTable into
			@deltableTenantId,
			@deltableId
	end
	close cursDelTable


	declare cursDelTypeDef insensitive cursor for
		select
			valu.tenantid,
			valu.id
		from cfbam23..schemadef as schm
			inner join cfbam23..valdef valu on
				schm.tenantid = valu.tenantid
				and schm.id = valu.scopeid
		where
			schm.tenantid = @argTenantId
			and schm.id = @argId


	open cursDelTypeDef
	fetch cursDelTypeDef into
			@deltypedefTenantId,
			@deltypedefId
	while ( @@sqlstatus = 0 )
	begin
		exec sp_delete_valdef_by_ididx @argAuditClusterId,
			@argAuditUserId,
			@argAuditSessionId,
			@secClusterId,
			@secTenantId,
			@deltypedefTenantId,
			@deltypedefId
		fetch cursDelTypeDef into
			@deltypedefTenantId,
			@deltypedefId
	end
	close cursDelTypeDef

	delete from cfbam23..schemadef
	where
		tenantid = @argTenantId
		and id = @argId
	select @rc = @@rowcount

	if @rc != 1
	begin
		raiserror 17004 "sp_delete_schemadef() Data collision detected"
	end
	delete from cfbam23..scopedef
	where
		tenantid = @argTenantId
		and id = @argId
		and revision = @argRevision
	select @rc = @@rowcount

	if @rc != 1
	begin
		raiserror 17004 "sp_delete_schemadef() Data collision detected"
	end
end
go
