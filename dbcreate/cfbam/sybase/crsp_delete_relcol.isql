--
--	@(#) dbcreate/cfbam/sybase/crsp_delete_relcol.isql
--
--	CFBam
--
--	Copyright (c) 2014-2015 Mark Sobkow
--	
--	This program is available as free software under the GNU GPL v3, under
--	the Eclipse Public License 1.0, or under a commercial license from Mark
--	Sobkow.  For commercial licensing details, please contact msobkow@sasktel.net.
--	
--	You should have received copies of the complete license text for
--	GPLv3.txt and EPLv1_0.txt, containing the text
--	of the GNU General Public License v 3.0 and the Eclipse Public License v 1.0.
--	
--	Under the terms of the GPL:
--	
--		This program is free software: you can redistribute it and/or modify
--		it under the terms of the GNU General Public License as published by
--		the Free Software Foundation, either version 3 of the License, or
--		(at your option) any later version.
--	  
--		This program is distributed in the hope that it will be useful,
--		but WITHOUT ANY WARRANTY; without even the implied warranty of
--		MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--		GNU General Public License for more details.
--	  
--		You should have received a copy of the GNU General Public License
--		along with this program.  If not, see <http://www.gnu.org/licenses/>.
--	
--	This software incorporates code originally Copyright (c) Mark Sobkow 2014-2015
--	and licensed under the BSD 3-Clause license as written by xfree86.org:
--	
--	Redistribution and use in source and binary forms, with or without
--	modification, are permitted provided that the following conditions are
--	met:
--	
--	    (1) Redistributions of source code must retain the above copyright
--	    notice, this list of conditions and the following disclaimer. 
--	
--	    (2) Redistributions in binary form must reproduce the above copyright
--	    notice, this list of conditions and the following disclaimer in
--	    the documentation and/or other materials provided with the
--	    distribution.  
--	    
--	    (3)The name of the author may not be used to
--	    endorse or promote products derived from this software without
--	    specific prior written permission.
--	
--	THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
--	IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
--	WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
--	DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
--	INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
--	(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
--	SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
--	HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
--	STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
--	IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
--	POSSIBILITY OF SUCH DAMAGE.
--	
--
-- **********************************************************************
--
--	Code manufactured by MSS Code Factory
--

if exists ( select * from sysobjects where name = 'sp_delete_relcol' )
begin
	drop proc sp_delete_relcol
end
go

create proc sp_delete_relcol
	@argAuditClusterId bigint,
	@argAuditUserId varchar(36),
	@argAuditSessionId varchar(36),
	@secClusterId bigint,
	@secTenantId bigint,
	@argTenantId bigint,
	@argId bigint,
	@argRevision int
as
	declare @varTenantId bigint
	declare @varRelationId bigint
	declare @prevPrevTenantId bigint
	declare @prevPrevId bigint
	declare @nextNextTenantId bigint
	declare @nextNextId bigint	declare @oldRevision int
	declare @rc int
	declare @oldTenantId bigint
	declare @oldRelationId bigint
	declare @oldId bigint
	declare @oldDefSchemaTenantId bigint
	declare @oldDefSchemaId bigint
	declare @oldName varchar(192)
	declare @oldShortName varchar(16)
	declare @oldLabel varchar(64)
	declare @oldShortDescription varchar(128)
	declare @oldDescription varchar(1023)
	declare @oldFromColId bigint
	declare @oldToColId bigint
	declare @oldPrevTenantId bigint
	declare @oldPrevId bigint
	declare @oldNextTenantId bigint
	declare @oldNextId bigint
	declare @oldDefaultVisibility char(1)
	declare @oldAuditCreatedAt bigdatetime
	declare @oldAuditCreatedBy varchar(36)
	declare @oldAuditUpdatedAt bigdatetime
	declare @oldAuditUpdatedBy varchar(36)
	declare @permissionFlag int
begin
	select
		@varTenantId = tenantid,
		@varRelationId = relationid
	from cfbam23..relcol
	where
		tenantid = @argTenantId
		and id = @argId

	update cfbam23..scopedef
	set revision = revision + 1
	where
		tenantid = @varTenantId
		and id = @varRelationId

	update cfbam23..relcol
	set forcesynclock = forcesynclock + 1
	where
			tenantid = @argTenantId
		and id = @argId
	select @rc = @@rowcount
	if @rc != 1
	begin
		raiserror 17004 "Data collision detected -- primary key does not exist"
	end

	select
		@oldAuditCreatedAt = relc.createdat,
		@oldAuditCreatedBy = relc.createdby,
		@oldAuditUpdatedAt = relc.updatedat,
		@oldAuditUpdatedBy = relc.updatedby,
		@oldTenantId = relc.tenantid,
		@oldRelationId = relc.relationid,
		@oldId = relc.id,
		@oldDefSchemaTenantId = relc.defschtentid,
		@oldDefSchemaId = relc.defschid,
		@oldName = relc.name,
		@oldShortName = relc.short_name,
		@oldLabel = relc.label,
		@oldShortDescription = relc.short_descr,
		@oldDescription = relc.descr,
		@oldFromColId = relc.fromcolid,
		@oldToColId = relc.tocolid,
		@oldPrevTenantId = relc.prevtenantid,
		@oldPrevId = relc.previd,
		@oldNextTenantId = relc.nexttenantid,
		@oldNextId = relc.nextid,
		@oldDefaultVisibility = relc.dflt_vis,
		@oldRevision = relc.revision
	from cfbam23..relcol as relc
	where
			relc.tenantid = @argTenantId
			and relc.id = @argId
	if @argRevision != @oldRevision
	begin
		raiserror 17000 "sp_delete_relcol() Data collision detected"
	end

	exec sp_is_tenant_user @permissionFlag output, @secTenantId, 'DeleteRelationCol', @argAuditUserId
	if( @permissionFlag = 0 )
	begin
		raiserror 17008 "Permission denied -- User not found in tenant TSecGroup for DeleteRelationCol"
	end

	select
		@prevPrevTenantId = myself.prevtenantid,
		@prevPrevId = myself.previd,
		@nextNextTenantId = myself.nexttenantid,
		@nextNextId = myself.nextid
	from cfbam23..relcol myself
	where
		myself.tenantid = @argTenantId
		and myself.id = @argId

	if( @prevPrevTenantId is not null )
	begin
		update cfbam23..relcol
		set
			revision = revision + 1,
			updatedby = @argAuditUserId,
			updatedat = current_bigdatetime(),
			nexttenantid = @nextNextTenantId,
			nextid = @nextNextId
		where
			tenantid = @prevPrevTenantId
			and id = @prevPrevId

		exec sp_audit_relcol @argAuditClusterId,
			@argAuditUserId,
			@argAuditSessionId,
			@secClusterId,
			@secTenantId,
			@prevPrevTenantId,
			@prevPrevId,
			2
	end

	if( @nextNextTenantId is not null )
	begin
		update cfbam23..relcol
		set
			revision = revision + 1,
			updatedby = @argAuditUserId,
			updatedat = current_bigdatetime(),
			prevtenantid = @prevPrevTenantId,
			previd = @prevPrevId
		where
			tenantid = @nextNextTenantId
			and id = @nextNextId

		exec sp_audit_relcol @argAuditClusterId,
			@argAuditUserId,
			@argAuditSessionId,
			@secClusterId,
			@secTenantId,
			@nextNextTenantId,
			@nextNextId,
			2
	end

	insert into cfbam23..relcol_h (
			tenantid,
			id,
			auditclusterid,
			auditsessionid,
			auditstamp,
			relationid,
			defschtentid,
			defschid,
			name,
			short_name,
			label,
			short_descr,
			descr,
			fromcolid,
			tocolid,
			prevtenantid,
			previd,
			nexttenantid,
			nextid,
			dflt_vis,
			revision,
			auditaction )
		select
			relc.tenantid,
			relc.id,
			@argAuditClusterId,
			@argAuditSessionId,
			current_bigdatetime(),
			relc.relationid,
			relc.defschtentid,
			relc.defschid,
			relc.name,
			relc.short_name,
			relc.label,
			relc.short_descr,
			relc.descr,
			relc.fromcolid,
			relc.tocolid,
			relc.prevtenantid,
			relc.previd,
			relc.nexttenantid,
			relc.nextid,
			relc.dflt_vis,
			@argRevision + 1,
			3
		from cfbam23..relcol as relc
		where
			relc.tenantid = @argTenantId
			and relc.id = @argId
	delete from cfbam23..relcol
	where
		tenantid = @argTenantId
		and id = @argId
		and revision = @argRevision
	select @rc = @@rowcount

	if @rc != 1
	begin
		raiserror 17004 "sp_delete_relcol() Data collision detected"
	end
	update cfbam23..scopedef
	set revision = revision - 1
	where
		tenantid = @varTenantId
		and id = @varRelationId

end
go
