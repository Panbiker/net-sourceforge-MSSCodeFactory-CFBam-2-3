--
--	@(#) dbcreate/cfbam/mysql/crsp_delete_clus.mysql
-- **********************************************************************
--
--	CFBam
--
--	Copyright (c) 2014-2015 Mark Sobkow
--	
--	This program is available as free software under the GNU GPL v3, under
--	the Eclipse Public License 1.0, or under a commercial license from Mark
--	Sobkow.  For commercial licensing details, please contact msobkow@sasktel.net.
--	
--	You should have received copies of the complete license text for
--	GPLv3.txt and EPLv1_0.txt, containing the text
--	of the GNU General Public License v 3.0 and the Eclipse Public License v 1.0.
--	
--	Under the terms of the GPL:
--	
--		This program is free software: you can redistribute it and/or modify
--		it under the terms of the GNU General Public License as published by
--		the Free Software Foundation, either version 3 of the License, or
--		(at your option) any later version.
--	  
--		This program is distributed in the hope that it will be useful,
--		but WITHOUT ANY WARRANTY; without even the implied warranty of
--		MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--		GNU General Public License for more details.
--	  
--		You should have received a copy of the GNU General Public License
--		along with this program.  If not, see <http://www.gnu.org/licenses/>.
--	
--	This software incorporates code originally Copyright (c) Mark Sobkow 2014-2015
--	and licensed under the BSD 3-Clause license as written by xfree86.org:
--	
--	Redistribution and use in source and binary forms, with or without
--	modification, are permitted provided that the following conditions are
--	met:
--	
--	    (1) Redistributions of source code must retain the above copyright
--	    notice, this list of conditions and the following disclaimer. 
--	
--	    (2) Redistributions in binary form must reproduce the above copyright
--	    notice, this list of conditions and the following disclaimer in
--	    the documentation and/or other materials provided with the
--	    distribution.  
--	    
--	    (3)The name of the author may not be used to
--	    endorse or promote products derived from this software without
--	    specific prior written permission.
--	
--	THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
--	IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
--	WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
--	DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
--	INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
--	(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
--	SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
--	HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
--	STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
--	IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
--	POSSIBILITY OF SUCH DAMAGE.
--	
--
-- ***********************************************************************
--
--	Code manufactured by MSS Code Factory
--

delimiter ////
create procedure cfbam23.sp_delete_clus(
	argAuditClusterId bigint,
	argAuditUserId varchar(36),
	argAuditSessionId varchar(36),
	secClusterId bigint,
	secTenantId bigint,
	argId bigint,
	argRevision int )
not deterministic
modifies sql data
begin
	declare RowsAffected bigint;
	declare oldId bigint;
	declare oldFullDomainName varchar(192);
	declare oldDescription varchar(128);
	declare oldRevision int;
	declare permissionFlag boolean;
	declare isSystemUser boolean;
	declare done int default false;
	declare delsecgroupformsClusterId bigint;
	declare delsecgroupformsSecGroupFormId bigint;
	declare delsecgroupincludedbygroupClusterId bigint;
	declare delsecgroupincludedbygroupSecGroupIncludeId bigint;
	declare delsecgroupmembersClusterId bigint;
	declare delsecgroupmembersSecGroupMemberId bigint;
	declare delsecgroupincludesClusterId bigint;
	declare delsecgroupincludesSecGroupIncludeId bigint;
	declare delsecgroupsClusterId bigint;
	declare delsecgroupsSecGroupId integer;
	declare delsecappformsClusterId bigint;
	declare delsecappformsSecFormId integer;
	declare delsecappsClusterId bigint;
	declare delsecappsSecAppId integer;
	declare deltenantsId bigint;
	declare delhostnodesClusterId bigint;
	declare delhostnodesHostNodeId bigint;
	declare cur_delsecgroupforms cursor for
		select
			sgfm.clusid,
			sgfm.secgrpfrmid
		from cfbam23.clus as clus
			inner join cfbam23.secgrp sgrp on
				clus.id = sgrp.clusterid
			inner join cfbam23.secgrpfrm sgfm on
				sgrp.clusterid = sgfm.clusid
				and sgrp.secgroupid = sgfm.secgrpid
		where
			clus.id = argId;
	declare cur_delsecgroupincludedbygroup cursor for
		select
			sgnc.clusid,
			sgnc.secgrpincid
		from cfbam23.clus as clus
			inner join cfbam23.secgrp sgrp on
				clus.id = sgrp.clusterid
			inner join cfbam23.secinc sgnc on
				sgrp.clusterid = sgnc.clusid
				and sgrp.secgroupid = sgnc.incgrpid
		where
			clus.id = argId;
	declare cur_delsecgroupmembers cursor for
		select
			sgmb.clusterid,
			sgmb.secgroupmemberid
		from cfbam23.clus as clus
			inner join cfbam23.secgrp sgrp on
				clus.id = sgrp.clusterid
			inner join cfbam23.secmemb sgmb on
				sgrp.clusterid = sgmb.clusterid
				and sgrp.secgroupid = sgmb.secgroupid
		where
			clus.id = argId;
	declare cur_delsecgroupincludes cursor for
		select
			sgnc.clusid,
			sgnc.secgrpincid
		from cfbam23.clus as clus
			inner join cfbam23.secgrp sgrp on
				clus.id = sgrp.clusterid
			inner join cfbam23.secinc sgnc on
				sgrp.clusterid = sgnc.clusid
				and sgrp.secgroupid = sgnc.secgrpid
		where
			clus.id = argId;
	declare cur_delsecgroups cursor for
		select
			sgrp.clusterid,
			sgrp.secgroupid
		from cfbam23.clus as clus
			inner join cfbam23.secgrp sgrp on
				clus.id = sgrp.clusterid
		where
			clus.id = argId;
	declare cur_delsecappforms cursor for
		select
			sfrm.clusterid,
			sfrm.secformid
		from cfbam23.clus as clus
			inner join cfbam23.secapp sapp on
				clus.id = sapp.clusterid
			inner join cfbam23.secform sfrm on
				sapp.clusterid = sfrm.clusterid
				and sapp.secappid = sfrm.secappid
		where
			clus.id = argId;
	declare cur_delsecapps cursor for
		select
			sapp.clusterid,
			sapp.secappid
		from cfbam23.clus as clus
			inner join cfbam23.secapp sapp on
				clus.id = sapp.clusterid
		where
			clus.id = argId;
	declare cur_deltenants cursor for
		select
			tent.id
		from cfbam23.clus as clus
			inner join cfbam23.tenant tent on
				clus.id = tent.clusterid
		where
			clus.id = argId;
	declare cur_delhostnodes cursor for
		select
			hsnd.clusterid,
			hsnd.hostnodeid
		from cfbam23.clus as clus
			inner join cfbam23.hostnode hsnd on
				clus.id = hsnd.clusterid
		where
			clus.id = argId;
	declare continue handler for not found set done = true;
	select
			Id,
		FullDomainName,
		Description,
			revision
	into
		oldId,
			oldFullDomainName,
			oldDescription,
		oldRevision
	from cfbam23.clus
	where
		Id = argId
	for update;
	select cfbam23.sp_is_system_user( argAuditUserId ) into permissionFlag;

	if( permissionFlag = false )
	then
		signal sqlstate '45001'
		set message_text = 'sp_delete_clus() Permission denied, not identified as system',
			schema_name = 'cfbam23',
			table_name = 'clus';
	end if;

	insert into cfbam23.clus_h (
			id,
			auditclusterid,
			auditsessionid,
			auditstamp,
			fulldomainname,
			description,
			revision,
			auditaction )
		select
			clus.id,
			argAuditClusterId,
			argAuditSessionId,
			now(),
			clus.fulldomainname,
			clus.description,
			clus.revision + 1,
			3
		from cfbam23.clus as clus
		where
			clus.id = argId;

	set done = false;
	open cur_delsecgroupforms;
	read_loop_delsecgroupforms: loop
		fetch cur_delsecgroupforms into
			delsecgroupformsClusterId,
			delsecgroupformsSecGroupFormId;
		if done then
			leave read_loop_delsecgroupforms;
		end if;
		call cfbam23.sp_delete_secgrpfrm_by_ididx( argAuditClusterId,
			argAuditUserId,
			argAuditSessionId,
			secClusterId,
			secTenantId,
			delsecgroupformsClusterId,
			delsecgroupformsSecGroupFormId );
	end loop;
	close cur_delsecgroupforms;
	set done = false;
	open cur_delsecgroupincludedbygroup;
	read_loop_delsecgroupincludedbygroup: loop
		fetch cur_delsecgroupincludedbygroup into
			delsecgroupincludedbygroupClusterId,
			delsecgroupincludedbygroupSecGroupIncludeId;
		if done then
			leave read_loop_delsecgroupincludedbygroup;
		end if;
		call cfbam23.sp_delete_secinc_by_ididx( argAuditClusterId,
			argAuditUserId,
			argAuditSessionId,
			secClusterId,
			secTenantId,
			delsecgroupincludedbygroupClusterId,
			delsecgroupincludedbygroupSecGroupIncludeId );
	end loop;
	close cur_delsecgroupincludedbygroup;
	set done = false;
	open cur_delsecgroupmembers;
	read_loop_delsecgroupmembers: loop
		fetch cur_delsecgroupmembers into
			delsecgroupmembersClusterId,
			delsecgroupmembersSecGroupMemberId;
		if done then
			leave read_loop_delsecgroupmembers;
		end if;
		call cfbam23.sp_delete_secmemb_by_ididx( argAuditClusterId,
			argAuditUserId,
			argAuditSessionId,
			secClusterId,
			secTenantId,
			delsecgroupmembersClusterId,
			delsecgroupmembersSecGroupMemberId );
	end loop;
	close cur_delsecgroupmembers;
	set done = false;
	open cur_delsecgroupincludes;
	read_loop_delsecgroupincludes: loop
		fetch cur_delsecgroupincludes into
			delsecgroupincludesClusterId,
			delsecgroupincludesSecGroupIncludeId;
		if done then
			leave read_loop_delsecgroupincludes;
		end if;
		call cfbam23.sp_delete_secinc_by_ididx( argAuditClusterId,
			argAuditUserId,
			argAuditSessionId,
			secClusterId,
			secTenantId,
			delsecgroupincludesClusterId,
			delsecgroupincludesSecGroupIncludeId );
	end loop;
	close cur_delsecgroupincludes;
	set done = false;
	open cur_delsecgroups;
	read_loop_delsecgroups: loop
		fetch cur_delsecgroups into
			delsecgroupsClusterId,
			delsecgroupsSecGroupId;
		if done then
			leave read_loop_delsecgroups;
		end if;
		call cfbam23.sp_delete_secgrp_by_ididx( argAuditClusterId,
			argAuditUserId,
			argAuditSessionId,
			secClusterId,
			secTenantId,
			delsecgroupsClusterId,
			delsecgroupsSecGroupId );
	end loop;
	close cur_delsecgroups;
	set done = false;
	open cur_delsecappforms;
	read_loop_delsecappforms: loop
		fetch cur_delsecappforms into
			delsecappformsClusterId,
			delsecappformsSecFormId;
		if done then
			leave read_loop_delsecappforms;
		end if;
		call cfbam23.sp_delete_secform_by_ididx( argAuditClusterId,
			argAuditUserId,
			argAuditSessionId,
			secClusterId,
			secTenantId,
			delsecappformsClusterId,
			delsecappformsSecFormId );
	end loop;
	close cur_delsecappforms;
	set done = false;
	open cur_delsecapps;
	read_loop_delsecapps: loop
		fetch cur_delsecapps into
			delsecappsClusterId,
			delsecappsSecAppId;
		if done then
			leave read_loop_delsecapps;
		end if;
		call cfbam23.sp_delete_secapp_by_ididx( argAuditClusterId,
			argAuditUserId,
			argAuditSessionId,
			secClusterId,
			secTenantId,
			delsecappsClusterId,
			delsecappsSecAppId );
	end loop;
	close cur_delsecapps;
	set done = false;
	open cur_deltenants;
	read_loop_deltenants: loop
		fetch cur_deltenants into
			deltenantsId;
		if done then
			leave read_loop_deltenants;
		end if;
		call cfbam23.sp_delete_tenant_by_ididx( argAuditClusterId,
			argAuditUserId,
			argAuditSessionId,
			secClusterId,
			secTenantId,
			deltenantsId );
	end loop;
	close cur_deltenants;
	set done = false;
	open cur_delhostnodes;
	read_loop_delhostnodes: loop
		fetch cur_delhostnodes into
			delhostnodesClusterId,
			delhostnodesHostNodeId;
		if done then
			leave read_loop_delhostnodes;
		end if;
		call cfbam23.sp_delete_hostnode_by_ididx( argAuditClusterId,
			argAuditUserId,
			argAuditSessionId,
			secClusterId,
			secTenantId,
			delhostnodesClusterId,
			delhostnodesHostNodeId );
	end loop;
	close cur_delhostnodes;
	delete from cfbam23.clus
	where
		id = argId;
	select row_count()
	into RowsAffected;

	if RowsAffected != 1 and RowsAffected != 0
	then
		signal sqlstate '45000'
		set message_text = 'sp_delete_clus() Expected to affect 1 clus',
			schema_name = 'cfbam23',
			table_name = 'clus';
	end if;

end;////
