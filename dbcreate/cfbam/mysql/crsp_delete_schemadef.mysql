--
--	@(#) dbcreate/cfbam/mysql/crsp_delete_schemadef.mysql
-- **********************************************************************
--
--	CFBam
--
--	Copyright (c) 2014-2015 Mark Sobkow
--	
--	This program is available as free software under the GNU GPL v3, under
--	the Eclipse Public License 1.0, or under a commercial license from Mark
--	Sobkow.  For commercial licensing details, please contact msobkow@sasktel.net.
--	
--	You should have received copies of the complete license text for
--	GPLv3.txt and EPLv1_0.txt, containing the text
--	of the GNU General Public License v 3.0 and the Eclipse Public License v 1.0.
--	
--	Under the terms of the GPL:
--	
--		This program is free software: you can redistribute it and/or modify
--		it under the terms of the GNU General Public License as published by
--		the Free Software Foundation, either version 3 of the License, or
--		(at your option) any later version.
--	  
--		This program is distributed in the hope that it will be useful,
--		but WITHOUT ANY WARRANTY; without even the implied warranty of
--		MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--		GNU General Public License for more details.
--	  
--		You should have received a copy of the GNU General Public License
--		along with this program.  If not, see <http://www.gnu.org/licenses/>.
--	
--	This software incorporates code originally Copyright (c) Mark Sobkow 2014-2015
--	and licensed under the BSD 3-Clause license as written by xfree86.org:
--	
--	Redistribution and use in source and binary forms, with or without
--	modification, are permitted provided that the following conditions are
--	met:
--	
--	    (1) Redistributions of source code must retain the above copyright
--	    notice, this list of conditions and the following disclaimer. 
--	
--	    (2) Redistributions in binary form must reproduce the above copyright
--	    notice, this list of conditions and the following disclaimer in
--	    the documentation and/or other materials provided with the
--	    distribution.  
--	    
--	    (3)The name of the author may not be used to
--	    endorse or promote products derived from this software without
--	    specific prior written permission.
--	
--	THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
--	IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
--	WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
--	DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
--	INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
--	(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
--	SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
--	HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
--	STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
--	IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
--	POSSIBILITY OF SUCH DAMAGE.
--	
--
-- ***********************************************************************
--
--	Code manufactured by MSS Code Factory
--

delimiter ////
create procedure cfbam23.sp_delete_schemadef(
	argAuditClusterId bigint,
	argAuditUserId varchar(36),
	argAuditSessionId varchar(36),
	secClusterId bigint,
	secTenantId bigint,
	argTenantId bigint,
	argId bigint,
	argRevision int )
not deterministic
modifies sql data
begin
	declare RowsAffected bigint;
	declare oldClassCode varchar(4);
	declare oldTenantId bigint;
	declare oldId bigint;
	declare oldRevision int;
	declare oldDomainId bigint;
	declare oldName varchar(192);
	declare oldDbName varchar(12);
	declare oldShortName varchar(16);
	declare oldLabel varchar(64);
	declare oldShortDescription varchar(128);
	declare oldDescription varchar(1023);
	declare oldDefaultLicenseTenantId bigint;
	declare oldDefaultLicenseId bigint;
	declare oldExtendCFCore boolean;
	declare oldDataScopeId smallint;
	declare oldViewAccessSecurityId smallint;
	declare oldEditAccessSecurityId smallint;
	declare oldViewAccessFrequencyId smallint;
	declare oldEditAccessFrequencyId smallint;
	declare oldCopyrightPeriod varchar(10);
	declare oldCopyrightHolder varchar(511);
	declare oldPublishURI varchar(512);
	declare oldJSchemaObjImport text;
	declare oldJSchemaObjInterface text;
	declare oldJSchemaObjMembers text;
	declare oldJSchemaObjImplementation text;
	declare oldJDb2LUWSchemaObjMembers text;
	declare oldJDb2LUWSchemaObjImpl text;
	declare oldJDb2LUWSchemaObjImport text;
	declare oldJMSSqlSchemaObjMembers text;
	declare oldJMSSqlSchemaObjImpl text;
	declare oldJMSSqlSchemaObjImport text;
	declare oldJMySqlSchemaObjMembers text;
	declare oldJMySqlSchemaObjImpl text;
	declare oldJMySqlSchemaObjImport text;
	declare oldJOracleSchemaObjMembers text;
	declare oldJOracleSchemaObjImpl text;
	declare oldJOracleSchemaObjImport text;
	declare oldJPgSqlSchemaObjMembers text;
	declare oldJPgSqlSchemaObjImpl text;
	declare oldJPgSqlSchemaObjImport text;
	declare oldJSybaseSchemaObjMembers text;
	declare oldJSybaseSchemaObjImpl text;
	declare oldJSybaseSchemaObjImport text;
	declare oldJRamSchemaObjMembers text;
	declare oldJRamSchemaObjImpl text;
	declare oldJRamSchemaObjImport text;
	declare oldJXMsgSchemaImport text;
	declare oldJXMsgSchemaFormatters text;
	declare oldJXMsgClientSchemaImport text;
	declare oldJXMsgClientSchemaBody text;
	declare oldJXMsgRqstSchemaBody text;
	declare oldJXMsgRqstSchemaImport text;
	declare oldJXMsgRqstSchemaWireParsers text;
	declare oldJXMsgRqstSchemaXsdSpec text;
	declare oldJXMsgRqstSchemaXsdElementList text;
	declare oldJXMsgRspnSchemaBody text;
	declare oldJXMsgRspnSchemaImport text;
	declare oldJXMsgRspnSchemaWireParsers text;
	declare oldJXMsgRspnSchemaXsdElementList text;
	declare oldJXMsgRspnSchemaXsdSpec text;
	declare permissionFlag boolean;
	declare isSystemUser boolean;
	declare done int default false;
	declare cleartablerelationnarrowedTenantId bigint;
	declare cleartablerelationnarrowedId bigint;
	declare deltablechainTenantId bigint;
	declare deltablechainId bigint;
	declare deltablerelationcolTenantId bigint;
	declare deltablerelationcolId bigint;
	declare deltablerelationTenantId bigint;
	declare deltablerelationId bigint;
	declare deltableTenantId bigint;
	declare deltableId bigint;
	declare deltypedefTenantId bigint;
	declare deltypedefId bigint;
	declare cur_cleartablerelationnarrowed cursor for
		select
			reld.tenantid as tenantid,
			reld.id as id
		from cfbam23.schemadef as schm
			inner join cfbam23.tbldef tbld on
				schm.tenantid = tbld.tenantid
				and schm.id = tbld.schemadefid
			inner join cfbam23.reldef reld on
				tbld.tenantid = reld.tenantid
				and tbld.id = reld.tableid
		where
			schm.tenantid = argTenantId
			and schm.id = argId;
	declare cur_deltablechain cursor for
		select
			chn.tenantid,
			chn.id
		from cfbam23.schemadef as schm
			inner join cfbam23.tbldef tbld on
				schm.tenantid = tbld.tenantid
				and schm.id = tbld.schemadefid
			inner join cfbam23.chain_def chn on
				tbld.tenantid = chn.tenantid
				and tbld.id = chn.tableid
		where
			schm.tenantid = argTenantId
			and schm.id = argId;
	declare cur_deltablerelationcol cursor for
		select
			relc.tenantid,
			relc.id
		from cfbam23.schemadef as schm
			inner join cfbam23.tbldef tbld on
				schm.tenantid = tbld.tenantid
				and schm.id = tbld.schemadefid
			inner join cfbam23.reldef reld on
				tbld.tenantid = reld.tenantid
				and tbld.id = reld.tableid
			inner join cfbam23.relcol relc on
				reld.tenantid = relc.tenantid
				and reld.id = relc.relationid
		where
			schm.tenantid = argTenantId
			and schm.id = argId;
	declare cur_deltablerelation cursor for
		select
			reld.tenantid,
			reld.id
		from cfbam23.schemadef as schm
			inner join cfbam23.tbldef tbld on
				schm.tenantid = tbld.tenantid
				and schm.id = tbld.schemadefid
			inner join cfbam23.reldef reld on
				tbld.tenantid = reld.tenantid
				and tbld.id = reld.tableid
		where
			schm.tenantid = argTenantId
			and schm.id = argId;
	declare cur_deltable cursor for
		select
			tbld.tenantid,
			tbld.id
		from cfbam23.schemadef as schm
			inner join cfbam23.tbldef tbld on
				schm.tenantid = tbld.tenantid
				and schm.id = tbld.schemadefid
		where
			schm.tenantid = argTenantId
			and schm.id = argId;
	declare cur_deltypedef cursor for
		select
			valu.tenantid,
			valu.id
		from cfbam23.schemadef as schm
			inner join cfbam23.valdef valu on
				schm.tenantid = valu.tenantid
				and schm.id = valu.scopeid
		where
			schm.tenantid = argTenantId
			and schm.id = argId;
	declare continue handler for not found set done = true;
	select
			ClassCode,
		TenantId,
		Id,
			revision
	into
		oldClassCode,
			oldTenantId,
			oldId,
		oldRevision
	from cfbam23.scopedef
	where
		TenantId = argTenantId
		and Id = argId
	for update;
	select
			TenantId,
		Id,
		DomainId,
		Name,
		DbName,
		short_name,
		Label,
		short_descr,
		descr,
		DefaultLicenseTenantId,
		DefLcnId,
		ExtendCFCore,
		DataScopeId,
		VAccSecId,
		EAccSecId,
		VAccFreqId,
		EAccFreqId,
		CopyPerd,
		CopyHold,
		PubURI,
		jobj_import,
		jobj_xface,
		jobj_memb,
		jobj_impl,
		jdb2_memb,
		jdb2_impl,
		jdb2_import,
		jmssql_memb,
		jmssql_impl,
		jmssql_import,
		jmysql_memb,
		jmysql_impl,
		jmysql_import,
		joracle_memb,
		joracle_impl,
		joracle_import,
		jpgsql_memb,
		jpgsql_impl,
		jpgsql_import,
		jsybase_memb,
		jsybase_impl,
		jsybase_import,
		jram_memb,
		jram_impl,
		jram_impl,
		javaxmsgschimp,
		javaxmsgschfmts,
		javaxmsgcltschimp,
		javaxmsgcltschbdy,
		javaxmsgrqstschbdy,
		javaxmsgrqstschimp,
		javaxmsgrqstschwirep,
		javaxmsgrqstschxsdspec,
		javaxmsgrqstschxsdeltlst,
		javaxmsgrspnschemabody,
		javaxmsgrspnschimp,
		javaxmsgrspnschwirep,
		javaxmsgrspnschxsdeltlst,
		javaxmsgrspnschxsdspec
	into
		oldTenantId,
			oldId,
			oldDomainId,
			oldName,
			oldDbName,
			oldShortName,
			oldLabel,
			oldShortDescription,
			oldDescription,
			oldDefaultLicenseTenantId,
			oldDefaultLicenseId,
			oldExtendCFCore,
			oldDataScopeId,
			oldViewAccessSecurityId,
			oldEditAccessSecurityId,
			oldViewAccessFrequencyId,
			oldEditAccessFrequencyId,
			oldCopyrightPeriod,
			oldCopyrightHolder,
			oldPublishURI,
			oldJSchemaObjImport,
			oldJSchemaObjInterface,
			oldJSchemaObjMembers,
			oldJSchemaObjImplementation,
			oldJDb2LUWSchemaObjMembers,
			oldJDb2LUWSchemaObjImpl,
			oldJDb2LUWSchemaObjImport,
			oldJMSSqlSchemaObjMembers,
			oldJMSSqlSchemaObjImpl,
			oldJMSSqlSchemaObjImport,
			oldJMySqlSchemaObjMembers,
			oldJMySqlSchemaObjImpl,
			oldJMySqlSchemaObjImport,
			oldJOracleSchemaObjMembers,
			oldJOracleSchemaObjImpl,
			oldJOracleSchemaObjImport,
			oldJPgSqlSchemaObjMembers,
			oldJPgSqlSchemaObjImpl,
			oldJPgSqlSchemaObjImport,
			oldJSybaseSchemaObjMembers,
			oldJSybaseSchemaObjImpl,
			oldJSybaseSchemaObjImport,
			oldJRamSchemaObjMembers,
			oldJRamSchemaObjImpl,
			oldJRamSchemaObjImport,
			oldJXMsgSchemaImport,
			oldJXMsgSchemaFormatters,
			oldJXMsgClientSchemaImport,
			oldJXMsgClientSchemaBody,
			oldJXMsgRqstSchemaBody,
			oldJXMsgRqstSchemaImport,
			oldJXMsgRqstSchemaWireParsers,
			oldJXMsgRqstSchemaXsdSpec,
			oldJXMsgRqstSchemaXsdElementList,
			oldJXMsgRspnSchemaBody,
			oldJXMsgRspnSchemaImport,
			oldJXMsgRspnSchemaWireParsers,
			oldJXMsgRspnSchemaXsdElementList,
			oldJXMsgRspnSchemaXsdSpec
	from cfbam23.schemadef
	where
		TenantId = argTenantId
		and Id = argId
	for update;
	if( oldTenantId != secTenantId )
	then
		select cfbam23.sp_is_system_user( argAuditUserId )
		into permissionFlag;

		if( permissionFlag = false )
		then
			signal sqlstate '45001'
			set message_text = 'sp_delete_schemadef() Permission denied, not identified as system',
				schema_name = 'cfbam23',
				table_name = 'schemadef';
		end if;
	end if;

	select cfbam23.sp_is_tenant_user( oldTenantId,
			'DeleteSchemaDef',
			argAuditUserId ),
		cfbam23.sp_is_system_user( argAuditUserId )
	into permissionFlag, isSystemUser;

	if( ( permissionFlag = false ) and ( isSystemUser = false ) )
	then
		signal sqlstate '45003'
		set message_text = 'sp_delete_schemadef() Permission denied, not granted access to DeleteSchemaDef for current Tenant',
			schema_name = 'cfbam23',
			table_name = 'schemadef';
	end if;

	if( oldClassCode = 'SCHM' )
	then
		insert into cfbam23.schemadef_h (
			tenantid,
			id,
			classcode,
			auditclusterid,
			auditsessionid,
			auditstamp,
			domainid,
			name,
			dbname,
			short_name,
			label,
			short_descr,
			descr,
			defaultlicensetenantid,
			deflcnid,
			extendcfcore,
			datascopeid,
			vaccsecid,
			eaccsecid,
			vaccfreqid,
			eaccfreqid,
			copyperd,
			copyhold,
			puburi,
			jobj_import,
			jobj_xface,
			jobj_memb,
			jobj_impl,
			jdb2_memb,
			jdb2_impl,
			jdb2_import,
			jmssql_memb,
			jmssql_impl,
			jmssql_import,
			jmysql_memb,
			jmysql_impl,
			jmysql_import,
			joracle_memb,
			joracle_impl,
			joracle_import,
			jpgsql_memb,
			jpgsql_impl,
			jpgsql_import,
			jsybase_memb,
			jsybase_impl,
			jsybase_import,
			jram_memb,
			jram_impl,
			jram_impl,
			javaxmsgschimp,
			javaxmsgschfmts,
			javaxmsgcltschimp,
			javaxmsgcltschbdy,
			javaxmsgrqstschbdy,
			javaxmsgrqstschimp,
			javaxmsgrqstschwirep,
			javaxmsgrqstschxsdspec,
			javaxmsgrqstschxsdeltlst,
			javaxmsgrspnschemabody,
			javaxmsgrspnschimp,
			javaxmsgrspnschwirep,
			javaxmsgrspnschxsdeltlst,
			javaxmsgrspnschxsdspec,
			revision,
			auditaction )
		select
			scop.tenantid,
			scop.id,
			scop.classcode,
			argAuditClusterId,
			argAuditSessionId,
			now(),
			schm.domainid,
			schm.name,
			schm.dbname,
			schm.short_name,
			schm.label,
			schm.short_descr,
			schm.descr,
			schm.defaultlicensetenantid,
			schm.deflcnid,
			schm.extendcfcore,
			schm.datascopeid,
			schm.vaccsecid,
			schm.eaccsecid,
			schm.vaccfreqid,
			schm.eaccfreqid,
			schm.copyperd,
			schm.copyhold,
			schm.puburi,
			schm.jobj_import,
			schm.jobj_xface,
			schm.jobj_memb,
			schm.jobj_impl,
			schm.jdb2_memb,
			schm.jdb2_impl,
			schm.jdb2_import,
			schm.jmssql_memb,
			schm.jmssql_impl,
			schm.jmssql_import,
			schm.jmysql_memb,
			schm.jmysql_impl,
			schm.jmysql_import,
			schm.joracle_memb,
			schm.joracle_impl,
			schm.joracle_import,
			schm.jpgsql_memb,
			schm.jpgsql_impl,
			schm.jpgsql_import,
			schm.jsybase_memb,
			schm.jsybase_impl,
			schm.jsybase_import,
			schm.jram_memb,
			schm.jram_impl,
			schm.jram_impl,
			schm.javaxmsgschimp,
			schm.javaxmsgschfmts,
			schm.javaxmsgcltschimp,
			schm.javaxmsgcltschbdy,
			schm.javaxmsgrqstschbdy,
			schm.javaxmsgrqstschimp,
			schm.javaxmsgrqstschwirep,
			schm.javaxmsgrqstschxsdspec,
			schm.javaxmsgrqstschxsdeltlst,
			schm.javaxmsgrspnschemabody,
			schm.javaxmsgrspnschimp,
			schm.javaxmsgrspnschwirep,
			schm.javaxmsgrspnschxsdeltlst,
			schm.javaxmsgrspnschxsdspec,
			scop.revision + 1,
			3
		from cfbam23.schemadef as schm
		inner join cfbam23.scopedef scop on
			schm.tenantid = scop.tenantid
			and schm.Id = scop.id
		where
			schm.tenantid = argTenantId
		and schm.id = argId;
	end if;

	set done = false;
	open cur_cleartablerelationnarrowed;
	read_loop_cleartablerelationnarrowed: loop
		fetch cur_cleartablerelationnarrowed into
			cleartablerelationnarrowedTenantId,
			cleartablerelationnarrowedId;
		if done then
			leave read_loop_cleartablerelationnarrowed;
		end if;
		update cfbam23.reldef
		set
			narrowedtenantid = null,
			narrowedid = null
		where
			tenantid = cleartablerelationnarrowedTenantId
			and id = cleartablerelationnarrowedId;

	end loop;
	close cur_cleartablerelationnarrowed;

	set done = false;
	open cur_deltablechain;
	read_loop_deltablechain: loop
		fetch cur_deltablechain into
			deltablechainTenantId,
			deltablechainId;
		if done then
			leave read_loop_deltablechain;
		end if;
		call cfbam23.sp_delete_chain_def_by_ididx( argAuditClusterId,
			argAuditUserId,
			argAuditSessionId,
			secClusterId,
			secTenantId,
			deltablechainTenantId,
			deltablechainId );
	end loop;
	close cur_deltablechain;
	set done = false;
	open cur_deltablerelationcol;
	read_loop_deltablerelationcol: loop
		fetch cur_deltablerelationcol into
			deltablerelationcolTenantId,
			deltablerelationcolId;
		if done then
			leave read_loop_deltablerelationcol;
		end if;
		call cfbam23.sp_delete_relcol_by_ididx( argAuditClusterId,
			argAuditUserId,
			argAuditSessionId,
			secClusterId,
			secTenantId,
			deltablerelationcolTenantId,
			deltablerelationcolId );
	end loop;
	close cur_deltablerelationcol;
	set done = false;
	open cur_deltablerelation;
	read_loop_deltablerelation: loop
		fetch cur_deltablerelation into
			deltablerelationTenantId,
			deltablerelationId;
		if done then
			leave read_loop_deltablerelation;
		end if;
		call cfbam23.sp_delete_reldef_by_ididx( argAuditClusterId,
			argAuditUserId,
			argAuditSessionId,
			secClusterId,
			secTenantId,
			deltablerelationTenantId,
			deltablerelationId );
	end loop;
	close cur_deltablerelation;
	set done = false;
	open cur_deltable;
	read_loop_deltable: loop
		fetch cur_deltable into
			deltableTenantId,
			deltableId;
		if done then
			leave read_loop_deltable;
		end if;
		call cfbam23.sp_delete_tbldef_by_ididx( argAuditClusterId,
			argAuditUserId,
			argAuditSessionId,
			secClusterId,
			secTenantId,
			deltableTenantId,
			deltableId );
	end loop;
	close cur_deltable;
	set done = false;
	open cur_deltypedef;
	read_loop_deltypedef: loop
		fetch cur_deltypedef into
			deltypedefTenantId,
			deltypedefId;
		if done then
			leave read_loop_deltypedef;
		end if;
		call cfbam23.sp_delete_valdef_by_ididx( argAuditClusterId,
			argAuditUserId,
			argAuditSessionId,
			secClusterId,
			secTenantId,
			deltypedefTenantId,
			deltypedefId );
	end loop;
	close cur_deltypedef;
	delete from cfbam23.schemadef
	where
		tenantid = argTenantId
		and id = argId;
	select row_count()
	into RowsAffected;

	if RowsAffected != 1 and RowsAffected != 0
	then
		signal sqlstate '45000'
		set message_text = 'sp_delete_schemadef() Expected to affect 1 schemadef',
			schema_name = 'cfbam23',
			table_name = 'schemadef';
	end if;

	delete from cfbam23.scopedef
	where
		tenantid = argTenantId
		and id = argId;
	select row_count()
	into RowsAffected;

	if RowsAffected != 1 and RowsAffected != 0
	then
		signal sqlstate '45000'
		set message_text = 'sp_delete_schemadef() Expected to affect 1 scopedef',
			schema_name = 'cfbam23',
			table_name = 'schemadef';
	end if;

end;////
